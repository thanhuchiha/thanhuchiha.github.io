{"version":3,"sources":["components/modal/modal.info.js","components/pagination/Pagination.js","constant/app.constant.js","components/modal/modal.confirm.js","components/common/validation.input.js","components/common/select.input.js","../node_modules/reactstrap/es/Alert.js","pages/admin/questionManagement/question.list.page.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","ModalInfo","_ref","size","isShowModal","toggleModal","children","title","okText","cancelText","clickOK","_ref$showCancel","showCancel","clickCancel","hiddenFooter","extraInfoLabel","a","createElement","isOpen","toggle","className","color","onClick","Pagination","_this$props","this","props","totalPages","initialPage","forcePage","pageRangeDisplayed","onPageChange","react__WEBPACK_IMPORTED_MODULE_5___default","react_paginate__WEBPACK_IMPORTED_MODULE_6___default","disableInitialCallback","previousLabel","aria-hidden","nextLabel","breakLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageCount","marginPagesDisplayed","containerClassName","activeLinkClassName","activeClassName","Component","d","__webpack_exports__","pagination","defaultTake","ModalConfirm","clickOk","react_validation_build_input__WEBPACK_IMPORTED_MODULE_3__","react_validation_build_input__WEBPACK_IMPORTED_MODULE_3___default","validator__WEBPACK_IMPORTED_MODULE_4__","isRequired","value","isEmpty","ValidationInput","disabled","inputClass","type","name","max","placeholder","onChange","required","validations","accept","unshift","for","id","concat","defaultProps","SelectInput","options","valueField","nameField","map","o","i","key","propTypes","prop_types_default","node","string","closeClassName","closeAriaLabel","cssModule","object","fade","bool","func","tag","utils","transition","shape","Fade","innerRef","oneOfType","Object","esm_objectSpread","unmountOnExit","Alert","Tag","attributes","objectWithoutPropertiesLoose","classes","classnames_default","alert-dismissible","closeClasses","alertTransition","baseClass","timeout","react_default","esm_extends","in","role","aria-label","es_Alert","QuestionListPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onModelChange","el","inputName","target","inputValue","trim","item","assign","state","setState","toggleModalInfo","prevState","isShowInfoModal","formTitle","toggleStatusUpdateModal","isShowStatusModal","toggleGeneratePDFModal","isShowGeneratePDFModal","toggleDeleteModal","isShowDeleteModal","showAddNew","question","answer","level","showUpdateModal","answerList","answers","elm","content","answerId","showConfirmDelete","itemId","showUpdateStatusModal","showGeneratePDF","types","quantity","getQuestionList","isDesc","arguments","length","undefined","sortName","params","query","addQuestion","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","questionApi","toastSuccess","t0","abrupt","stop","updateQuestion","_callee2","_context2","toastError","message","deleteQuestion","_callee3","_context3","questionList","sources","objectSpread","skip","updateStatus","_callee4","_this$state$item","status","containApproveAnswer","_context4","forEach","generatePDF","_callee5","_this$state$item2","data","_context5","console","log","onDismissAlert","Api","sent","pdfLink","alertVisible","saveQuestion","search","e","onSearchChange","persist","delayedCallback","handleSort","activeSort","take","lodash","debounce","bind","assertThisInitialized","preventDefault","form","validateAll","_this2","_this$state","pageIndex","hasResults","modal_confirm","href","Modal","ModalHeader","ModalBody","form_default","onSubmit","onUpdateStatus","ref","c","FormGroup","select_input","Button","onGeneratePDF","modal_info","validation_input","Row","Col","xs","sm","md","lg","Table","responsive","bordered","pageSize","style","levelText","typeText","handlePageClick","connect"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAuCeQ,IAnCG,SAAAC,GAaZ,IAZJC,EAYID,EAZJC,KACAC,EAWIF,EAXJE,YACAC,EAUIH,EAVJG,YACAC,EASIJ,EATJI,SACAC,EAQIL,EARJK,MACAC,EAOIN,EAPJM,OACAC,EAMIP,EANJO,WACAC,EAKIR,EALJQ,QAKIC,EAAAT,EAJJU,kBAII,IAAAD,KAHJE,EAGIX,EAHJW,YAEAC,GACIZ,EAFJa,eAEIb,EADJY,cAEA,OACEpB,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,CAAOsB,OAAQd,EAAae,OAAQd,EAAaF,KAAMA,GACrDT,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,KAAcU,GACdb,EAAAsB,EAAAC,cAACnB,EAAA,EAAD,KAAYQ,IAEVQ,GACApB,EAAAsB,EAAAC,cAAClB,EAAA,EAAD,CAAaqB,UAAU,0BACrB1B,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAQqB,MAAM,SAASC,QAASZ,GAAWL,GACxCG,GAAU,oBACH,IACTI,GACClB,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAQqB,MAAM,YAAYC,QAAST,GAAeR,GAC/CI,GAAc,sKC1BRc,2LACV,IAAAC,EACwEC,KAAKC,MAA9EC,EADCH,EACDG,WAAYC,EADXJ,EACWI,YAAaC,EADxBL,EACwBK,UAAWC,EADnCN,EACmCM,mBAAoBC,EADvDP,EACuDO,aAC9D,OACEJ,EAAa,GAAKK,EAAAhB,EAAAC,cAACgB,EAAAjB,EAAD,CAChBkB,wBAAwB,EACxBN,YAAaA,EACbC,UAAWA,EACXM,cAAeH,EAAAhB,EAAAC,cAAA,KAAGG,UAAU,qBAAqBgB,cAAY,SAC7DC,UAAWL,EAAAhB,EAAAC,cAAA,KAAGG,UAAU,sBAAsBgB,cAAY,SAC1DE,WAAY,MACZC,cAAe,YACfC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,cAAc,YACdC,kBAAkB,YAClBC,UAAWlB,EACXmB,qBAAsB,EACtBhB,mBAAoBA,GAAsB,EAC1CC,aAAcA,EACdgB,mBAAoB,aACpBC,oBAAqB,SACrBC,gBAAiB,kBAvBeC,sECJxCzD,EAAA0D,EAAAC,EAAA,sBAAAC,IAAO,IAAMA,EAAa,CACxBC,YAAa,GACb1B,YAAa,qCCFf,IAAApC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAuBe8D,IApBM,SAAArD,GAAkD,IAA/CK,EAA+CL,EAA/CK,MAAOH,EAAwCF,EAAxCE,YAAaoD,EAA2BtD,EAA3BsD,QAASnD,EAAkBH,EAAlBG,YACnD,OACEX,EAAAsB,EAAAC,cAAA,WACEvB,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,CAAOsB,OAAQd,EAAae,OAAQd,GAClCX,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,KACGU,GAAS,kGAEZb,EAAAsB,EAAAC,cAACnB,EAAA,EAAD,KACEJ,EAAAsB,EAAAC,cAAClB,EAAA,EAAD,CAAQsB,MAAM,SAASC,QAASkC,GAAhC,oBAEU,IACV9D,EAAAsB,EAAAC,cAAClB,EAAA,EAAD,CAAQsB,MAAM,YAAYC,QAASjB,GAAnC,0DCdV,IAAAb,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAgE,EAAAhE,EAAA,KAAAiE,EAAAjE,EAAAE,EAAA8D,GAAAE,EAAAlE,EAAA,KAKMmE,EAAa,SAAAC,GACjB,GAAIC,kBAAQD,GACV,OAAOnE,EAAAsB,EAAAC,cAAA,SAAOG,UAAU,yBAAjB,4BAIL2C,EAAkB,SAAA7D,GAalB,IAZJ8D,EAYI9D,EAZJ8D,SACAC,EAWI/D,EAXJ+D,WACA1D,EAUIL,EAVJK,MACA2D,EASIhE,EATJgE,KACAC,EAQIjE,EARJiE,KACAC,EAOIlE,EAPJkE,IACAC,EAMInE,EANJmE,YACAR,EAKI3D,EALJ2D,MACAS,EAIIpE,EAJJoE,SACAC,EAGIrE,EAHJqE,SACAC,EAEItE,EAFJsE,YACAC,EACIvE,EADJuE,OAIA,OAFKD,IAAaA,EAAc,IAC5BD,GAAUC,EAAYE,QAAQd,GAEhClE,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,KACEF,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,CAAOuB,UAAU,cAAcuD,IAAKR,GAAMzE,EAAAsB,EAAAC,cAAA,cACvCV,EADuC,KAA1C,IACqBgE,GAAY7E,EAAAsB,EAAAC,cAAA,QAAMG,UAAU,eAAhB,MAEjC1B,EAAAsB,EAAAC,cAACyC,EAAA1C,EAAD,CACEgD,SAAUA,EACVY,GAAIT,EACJA,KAAMA,EACNC,IAAKA,EACLP,MAAO,GAAKA,EACZS,SAAUA,EACVJ,KAAMA,EACNG,YAAaA,EACbjD,UAAS,gBAAAyD,OAAkBZ,GAC3BO,YAAaA,EACbC,OAAQA,MAahBV,EAAgBe,aAAe,CAC7BvE,MAAO,GACP2D,KAAM,OACNC,KAAM,GACNE,YAAa,IAGAN,wCC/Df,IAAAvE,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAIMsF,EAAc,SAAA7E,GAad,IAZJK,EAYIL,EAZJK,MACA8D,EAWInE,EAXJmE,YACAF,EAUIjE,EAVJiE,KACAN,EASI3D,EATJ2D,MACAmB,EAQI9E,EARJ8E,QACAV,EAOIpE,EAPJoE,SAEAC,GAKIrE,EANJ+D,WAMI/D,EALJqE,UAIAP,GACI9D,EAJJ+E,WAII/E,EAHJgF,UAGIhF,EADJ8D,UAEA,OACEtE,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,KACEF,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,CAAOuB,UAAU,cAAcuD,IAAKR,GAAMzE,EAAAsB,EAAAC,cAAA,cACvCV,IAEHb,EAAAsB,EAAAC,cAAA,UACEqD,SAAUA,EACVlD,UAAS,eACT8C,KAAK,SACLC,KAAMA,EACNI,SAAUA,EACVV,MAAOA,GAAS,GAEhBG,SAAUA,GAETK,GAAe3E,EAAAsB,EAAAC,cAAA,cAASoD,GACxBW,EAAQG,IAAI,SAACC,EAAGC,GACf,OACE3F,EAAAsB,EAAAC,cAAA,UAAQqE,IAAKD,EAAGxB,MAAOuB,EAAER,IACtBQ,EAAEjB,WAgBjBY,EAAYD,aAAe,CACzBvE,MAAO,GACP4D,KAAM,GACNE,YAAa,IAGAU,2VCnDfQ,EAAA,CACAjF,SAAYkF,EAAAxE,EAASyE,KACrBrE,UAAaoE,EAAAxE,EAAS0E,OACtBC,eAAkBH,EAAAxE,EAAS0E,OAC3BE,eAAkBJ,EAAAxE,EAAS0E,OAC3BG,UAAaL,EAAAxE,EAAS8E,OACtBzE,MAASmE,EAAAxE,EAAS0E,OAClBK,KAAQP,EAAAxE,EAASgF,KACjB9E,OAAUsE,EAAAxE,EAASgF,KACnB7E,OAAUqE,EAAAxE,EAASiF,KACnBC,IAAOC,EAAA,EACPC,WAAcZ,EAAAxE,EAASqF,MAAOC,EAAA,EAAIf,WAClCgB,SAAYf,EAAAxE,EAASwF,UAAA,CAAYhB,EAAAxE,EAAS8E,OAASN,EAAAxE,EAAS0E,OAASF,EAAAxE,EAASiF,QAE9EnB,EAAA,CACAzD,MAAA,UACAH,QAAA,EACAgF,IAAA,MACAN,eAAA,QACAG,MAAA,EACAK,WAAcK,OAAAC,EAAA,EAAAD,CAAa,GAAKH,EAAA,EAAIxB,aAAA,CACpC6B,eAAA,KAIA,SAAAC,EAAAlF,GACA,IAAAN,EAAAM,EAAAN,UACAuE,EAAAjE,EAAAiE,eACAC,EAAAlE,EAAAkE,eACAC,EAAAnE,EAAAmE,UACAgB,EAAAnF,EAAAwE,IACA7E,EAAAK,EAAAL,MACAH,EAAAQ,EAAAR,OACAC,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,SACA8F,EAAA1E,EAAA0E,WACAL,EAAArE,EAAAqE,KACAQ,EAAA7E,EAAA6E,SACAO,EAAmBL,OAAAM,EAAA,EAAAN,CAA6B/E,EAAA,uIAEhDsF,EAAgBP,OAAAN,EAAA,EAAAM,CAAgBQ,IAAU7F,EAAA,iBAAAC,EAAA,CAC1C6F,oBAAA/F,IACG0E,GACHsB,EAAqBV,OAAAN,EAAA,EAAAM,CAAgBQ,IAAU,QAAAtB,GAAAE,GAE/CuB,EAAwBX,OAAAC,EAAA,EAAAD,CAAa,GAAKH,EAAA,EAAIxB,aAAAsB,EAAA,CAC9CiB,UAAAtB,EAAAK,EAAAiB,UAAA,GACAC,QAAAvB,EAAAK,EAAAkB,QAAA,IAGA,OAASC,EAAAvG,EAAKC,cAAeqF,EAAA,EAAMG,OAAAe,EAAA,EAAAf,CAAQ,GAAGK,EAAAM,EAAA,CAC9ClB,IAAAW,EACAzF,UAAA4F,EACAS,GAAAvG,EACAwG,KAAA,QACAnB,aACGpF,EAAYoG,EAAAvG,EAAKC,cAAA,UACpBiD,KAAA,SACA9C,UAAA+F,EACAQ,aAAA/B,EACAtE,QAAAH,GACKoG,EAAAvG,EAAKC,cAAA,QACVmB,cAAA,QACG,cAAA9B,GAGHsG,EAAArB,YACAqB,EAAA9B,eACe,IAAA8C,EAAA,mFC5DTC,cACF,SAAAA,EAAYnG,GAAO,IAAAoG,EAAA,OAAArB,OAAAsB,EAAA,EAAAtB,CAAAhF,KAAAoG,IACfC,EAAArB,OAAAuB,EAAA,EAAAvB,CAAAhF,KAAAgF,OAAAwB,EAAA,EAAAxB,CAAAoB,GAAAK,KAAAzG,KAAMC,KAsBVyG,cAAgB,SAAAC,GACZ,IAAIC,EAAYD,EAAGE,OAAOnE,KACtBoE,EAAaH,EAAGE,OAAOzE,MAAM2E,OAC7BC,EAAOhC,OAAOiC,OAAO,GAAIZ,EAAKa,MAAMF,MACxCA,EAAKJ,GAAaE,EAClBT,EAAKc,SAAS,CAAEH,UA5BDX,EAmCnBe,gBAAkB,SAACJ,EAAMlI,GACrBuH,EAAKc,SAAS,SAAAE,GAAS,MAAK,CACxBC,iBAAkBD,EAAUC,gBAC5BN,KAAMA,GAAQ,GACdO,UAAWzI,MAvCAuH,EA2CnBmB,wBAA0B,SAACR,GACvBX,EAAKc,SAAS,SAAAE,GAAS,MAAK,CACxBI,mBAAoBJ,EAAUI,kBAC9BT,KAAMA,GAAQ,OA9CHX,EAkDnBqB,uBAAyB,SAACV,GACtBX,EAAKc,SAAS,SAAAE,GAAS,MAAK,CACxBM,wBAAyBN,EAAUM,uBACnCX,KAAMA,GAAQ,OArDHX,EAyDnBuB,kBAAoB,WAChBvB,EAAKc,SAAS,SAAAE,GAAS,MAAK,CACxBQ,mBAAoBR,EAAUQ,sBA3DnBxB,EA+DnByB,WAAa,WAQTzB,EAAKe,gBANU,CACXW,SAAU,GACVC,OAAQ,GACRC,MAAO,EACPxF,KAAM,GALE,oBAhEG4D,EA0EnB6B,gBAAkB,SAAAlB,GACd,IAAImB,EAAanB,EAAKoB,QAAQ1E,IAAI,SAAA2E,GAAG,MACjC,CACIlF,GAAIkF,EAAIlF,GACRT,KAAM2F,EAAIC,WAGdP,EAAW,CACX5E,GAAI6D,EAAK7D,GACT4E,SAAUf,EAAKsB,QACfH,WAAYA,EACZF,MAAOjB,EAAKiB,MACZxF,KAAMuE,EAAKvE,KACX8F,SAAUJ,EAAW,GAAKA,EAAW,GAAGhF,GAAK,IAGjDkD,EAAKe,gBAAgBW,EADT,oBAzFG1B,EA6FnBmC,kBAAoB,SAAAC,GAChBpC,EAAKc,SACD,CACIsB,OAAQA,GAEZ,kBAAMpC,EAAKuB,uBAlGAvB,EAsGnBqC,sBAAwB,SAAC1B,GACrBX,EAAKmB,wBAAwBR,IAvGdX,EA0GnBsC,gBAAkB,WAMdtC,EAAKqB,uBALM,CACPO,MAAO,EACPW,MAAO,EACPC,SAAU,MA9GCxC,EAmHnByC,gBAAkB,WAAyC,IAAxCC,EAAwCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAxBG,EAAwBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,SACtCI,EAASpE,OAAOiC,OAAO,GAAIZ,EAAKa,MAAMkC,OAAQ,CAC9CC,MAAOhD,EAAKa,MAAMmC,MAClBN,OAAQA,EACRI,SAAUA,IAEd9C,EAAKpG,MAAM6I,gBAAgBM,IAzHZ/C,EA4HnBiD,YA5HmBtE,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjK,EAAAkK,KA4HL,SAAAC,IAAA,OAAAF,EAAAjK,EAAAoK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEAC,IAAYT,YAAYjD,EAAKa,MAAMF,MAFnC,OAGNX,EAAKyC,kBACLzC,EAAKe,kBACL4C,YAAa,8CALPJ,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAM,OAAA,SAOC,MAPD,yBAAAN,EAAAO,SAAAT,EAAA,iBA5HKrD,EAuInB+D,eAvImBpF,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjK,EAAAkK,KAuIF,SAAAY,IAAA,IAAAtC,EAAA,OAAAyB,EAAAjK,EAAAoK,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,cACP/B,EAAW/C,OAAOiC,OAAO,GAAIZ,EAAKa,MAAMF,MADjCsD,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAGHC,IAAYK,eAAerC,GAHxB,OAIT1B,EAAKe,kBACLf,EAAKyC,kBACLkB,YAAa,8CANJM,EAAAR,KAAA,gBAAAQ,EAAAT,KAAA,EAAAS,EAAAL,GAAAK,EAAA,SAQTC,YAAWD,EAAAL,GAAIO,SARN,yBAAAF,EAAAH,SAAAE,EAAA,iBAvIEhE,EAmJnBoE,eAnJmBzF,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjK,EAAAkK,KAmJF,SAAAiB,IAAA,OAAAlB,EAAAjK,EAAAoK,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAEHC,IAAYU,eAAepE,EAAKa,MAAMuB,QAFnC,OAGmD,IAAxDpC,EAAKpG,MAAM2K,aAAaA,aAAaC,QAAQ5B,QAC7C5C,EAAKc,SAAS,CACViC,OAAOpE,OAAA8F,EAAA,EAAA9F,CAAA,GAAMqB,EAAKa,MAAMkC,OAAlB,CAA0B2B,KAAM1E,EAAKa,MAAMkC,OAAO2B,KAAO,MAGvE1E,EAAKuB,oBACLvB,EAAKyC,kBACLkB,YAAa,8CAVJW,EAAAb,KAAA,gBAAAa,EAAAd,KAAA,EAAAc,EAAAV,GAAAU,EAAA,SAYTJ,YAAUI,EAAAV,IAZD,yBAAAU,EAAAR,SAAAO,EAAA,iBAnJErE,EAyKnB2E,aAzKmBhG,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjK,EAAAkK,KAyKJ,SAAAwB,IAAA,IAAAC,EAAAC,EAAAhI,EAAAiF,EAAAL,EAAAqD,EAAA,OAAA5B,EAAAjK,EAAAoK,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UAAAoB,EACqB7E,EAAKa,MAAMF,KAAnCmE,EADGD,EACHC,OAAQhI,EADL+H,EACK/H,GAAIiF,EADT8C,EACS9C,QACdL,EAAW,CAAEoD,SAAQhI,MACV,QAEbgI,GAAuB/C,EAAQa,OAAS,GALjC,CAAAoC,EAAAvB,KAAA,WAMHsB,GAAuB,EAE3BhD,EAAQkD,QAAQ,SAAAtD,GALH,IAMLA,EAAOmD,SACPC,GAAuB,KAI1BA,EAdE,CAAAC,EAAAvB,KAAA,eAeHS,YAAW,4CAfRc,EAAAnB,OAAA,wBAAAmB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,GAqBDC,IAAYiB,aAAajD,GArBxB,QAsBP1B,EAAKmB,0BACLnB,EAAKyC,kBACLkB,YAAa,4CAxBNqB,EAAAvB,KAAA,iBAAAuB,EAAAxB,KAAA,GAAAwB,EAAApB,GAAAoB,EAAA,SA0BPd,YAAUc,EAAApB,IA1BH,yBAAAoB,EAAAlB,SAAAc,EAAA,kBAzKI5E,EA8MnBkF,YA9MmBvG,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjK,EAAAkK,KA8ML,SAAA+B,IAAA,IAAAC,EAAAxD,EAAAW,EAAAC,EAAAQ,EAAAqC,EAAA,OAAAlC,EAAAjK,EAAAoK,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA2B,EACyBpF,EAAKa,MAAMF,KAAtCiB,EADEwD,EACFxD,MAAOW,EADL6C,EACK7C,MAAOC,EADZ4C,EACY5C,SAChBQ,EAAQ,CAAEpB,QAAOW,QAAOC,YAC9B+C,QAAQC,IAAIxC,GACZhD,EAAKyF,iBAJKH,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAMWiC,IAAIR,YAAYlC,GAN3B,OAMFqC,EANEC,EAAAK,KAON3F,EAAKc,SAAS,CACV8E,QAASP,EACTQ,cAAc,IAElB7F,EAAKqB,yBAXCiE,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAA1B,GAAA0B,EAAA,SAaNpB,YAAUoB,EAAA1B,IAbJ,yBAAA0B,EAAAxB,SAAAqB,EAAA,kBA9MKnF,EAgOnB8F,aAAe,WACE9F,EAAKa,MAAMF,KAAlB7D,GAEFkD,EAAK+D,iBAEL/D,EAAKiD,eArOMjD,EA+OnB+F,OAAS,SAAAC,GACLhG,EAAKc,SACD,CACIiC,OAAOpE,OAAA8F,EAAA,EAAA9F,CAAA,GACAqB,EAAKa,MAAMkC,OADZ,CAEF2B,KAAM,IAEV1B,MAAOgD,EAAExF,OAAOzE,OAEpB,WACIiE,EAAKyC,qBAzPEzC,EA8PnBiG,eAAiB,SAAAD,GACbA,EAAEE,UACFlG,EAAKmG,gBAAgBH,IAhQNhG,EAmQnBoG,WAAa,SAACtD,GAAa,IACfJ,EAAW1C,EAAKa,MAAhB6B,OACR1C,EAAKc,SAAS,CACV4B,QAASA,EACTI,SAAUA,EACVuD,WAAYvD,GAEZ,kBAAM9C,EAAKyC,gBAAgBzC,EAAKa,MAAM6B,OAAQ1C,EAAKa,MAAMiC,aAxQ7D9C,EAAKa,MAAQ,CACTW,mBAAmB,EACnBP,iBAAiB,EACjBG,mBAAmB,EACnBE,wBAAwB,EACxBX,KAAM,GACNyB,OAAQ,KACRW,OAAQ,CACJ2B,KAAMnJ,IAAWzB,YACjBwM,KAAM/K,IAAWC,aAErBwH,MAAO,GACPN,QAAQ,EACRI,SAAU,SACVuD,WAAY,SACZR,cAAc,GAElB7F,EAAKmG,gBAAkBI,IAAOC,SAASxG,EAAK+F,OAAQ,KACpD/F,EAAKyF,eAAiBzF,EAAKyF,eAAegB,KAApB9H,OAAA+H,EAAA,EAAA/H,QAAA+H,EAAA,EAAA/H,CAAAqB,KApBPA,gFAgCfrG,KAAKmH,SAAS,CAAE+E,cAAc,2CAmInBG,GACXA,EAAEW,iBACFhN,KAAKiN,KAAKC,cACVlN,KAAKgL,qDAkCKqB,GACVA,EAAEW,iBACFhN,KAAKiN,KAAKC,cACVlN,KAAKuL,+CA8BAc,GACLA,EAAEW,iBACFhN,KAAKiN,KAAKC,cACVlN,KAAKmM,2DAmCLnM,KAAK8I,mDAGA,IAAAqE,EAAAnN,KAAAoN,EACgDpN,KAAKkH,MAAlDW,EADHuF,EACGvF,kBAAmBP,EADtB8F,EACsB9F,gBAAiBN,EADvCoG,EACuCpG,KACpC4D,EAAiB5K,KAAKC,MAAM2K,aAA5BA,aACAC,EAAmCD,EAAnCC,QAASwC,EAA0BzC,EAA1ByC,UAAWnN,EAAe0K,EAAf1K,WACtBoN,EAAa1C,EAAaC,SAAWD,EAAaC,QAAQ5B,OAAS,EACzE,OACInD,EAAAvG,EAAAC,cAAA,OAAKG,UAAU,mBACXmG,EAAAvG,EAAAC,cAAC+N,EAAA,EAAD,CACIxL,QAAS/B,KAAKyK,eACd9L,YAAakJ,EACbjJ,YAAaoB,KAAK4H,oBAGtB9B,EAAAvG,EAAAC,cAAC2G,EAAD,CAAOvG,MAAM,UAAUH,OAAQO,KAAKkH,MAAMgF,aAAcxM,OAAQM,KAAK8L,eAAgBxH,MAAM,GAA3F,4CAC6CwB,EAAAvG,EAAAC,cAAA,KAAGgO,KAAMxN,KAAKkH,MAAM+E,QAAStM,UAAU,cAAvC,SAG7CmG,EAAAvG,EAAAC,cAACiO,EAAA,EAAD,CAAOhO,OAAQO,KAAKkH,MAAMO,kBAAmB/H,OAAQM,KAAKwH,yBACtD1B,EAAAvG,EAAAC,cAACkO,EAAA,EAAD,sBAGA5H,EAAAvG,EAAAC,cAACmO,EAAA,EAAD,KACI7H,EAAAvG,EAAAC,cAACoO,EAAArO,EAAD,CACIsO,SAAU,SAAAxB,GAAC,OAAIc,EAAKW,eAAezB,IACnC0B,IAAK,SAAAC,GAAOb,EAAKF,KAAOe,IAExBlI,EAAAvG,EAAAC,cAACyO,EAAA,EAAD,KACInI,EAAAvG,EAAAC,cAAC0O,EAAA,EAAD,CACIxL,KAAK,SACL5D,MAAM,SACN2E,UAAU,YACVD,WAAW,aACXpB,MAAO4E,EAAKmE,OACZtI,SAAU7C,KAAK0G,cACfnD,QAAS,CACL,CAAEJ,GAAI,EAAGT,KAAM,WACf,CAAES,GAAI,EAAGT,KAAM,YACf,CAAES,GAAI,EAAGT,KAAM,aAEnBI,UAAU,IACdgD,EAAAvG,EAAAC,cAAA,OAAKG,UAAU,eACXmG,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,eAAe8C,KAAK,UAAtC,YACsB,IACtBqD,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,aAAaE,QAASG,KAAKwH,yBAA7C,gBAQpB1B,EAAAvG,EAAAC,cAACiO,EAAA,EAAD,CAAOhO,OAAQO,KAAKkH,MAAMS,uBAAwBjI,OAAQM,KAAK0H,wBAC3D5B,EAAAvG,EAAAC,cAACkO,EAAA,EAAD,qBAGA5H,EAAAvG,EAAAC,cAACmO,EAAA,EAAD,KACI7H,EAAAvG,EAAAC,cAACoO,EAAArO,EAAD,CACIsO,SAAU,SAAAxB,GAAC,OAAIc,EAAKiB,cAAc/B,IAClC0B,IAAK,SAAAC,GAAOb,EAAKF,KAAOe,IAExBlI,EAAAvG,EAAAC,cAACyO,EAAA,EAAD,KACInI,EAAAvG,EAAAC,cAAC0O,EAAA,EAAD,CACIxL,KAAK,QACL5D,MAAM,QACN2E,UAAU,YACVD,WAAW,aACXpB,MAAO4E,EAAKiB,MACZpF,SAAU7C,KAAK0G,cACfnD,QAAS,CACL,CAAEJ,GAAI,EAAGT,KAAM,WACf,CAAES,GAAI,EAAGT,KAAM,UACf,CAAES,GAAI,EAAGT,KAAM,WAEnBI,UAAU,IACdgD,EAAAvG,EAAAC,cAAC0O,EAAA,EAAD,CACIxL,KAAK,QACL5D,MAAM,OACN2E,UAAU,YACVD,WAAW,aACXpB,MAAO4E,EAAK4B,MACZ/F,SAAU7C,KAAK0G,cACfnD,QAAS,CACL,CAAEJ,GAAI,EAAGT,KAAM,WACf,CAAES,GAAI,EAAGT,KAAM,YACf,CAAES,GAAI,EAAGT,KAAM,UACf,CAAES,GAAI,EAAGT,KAAM,YAEnBI,UAAU,IACdgD,EAAAvG,EAAAC,cAAC0O,EAAA,EAAD,CACIxL,KAAK,WACL5D,MAAM,WACN2E,UAAU,YACVD,WAAW,aACXpB,MAAO4E,EAAK6B,SACZhG,SAAU7C,KAAK0G,cACfnD,QAAS,CACL,CAAEJ,GAAI,GAAIT,KAAM,MAChB,CAAES,GAAI,GAAIT,KAAM,MAChB,CAAES,GAAI,GAAIT,KAAM,MAChB,CAAES,GAAI,GAAIT,KAAM,OAEpBI,UAAU,IACdgD,EAAAvG,EAAAC,cAAA,OAAKG,UAAU,eACXmG,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,eAAe8C,KAAK,UAAtC,YACsB,IACtBqD,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,aAAaE,QAASG,KAAK0H,wBAA7C,gBAQpB5B,EAAAvG,EAAAC,cAAC6O,EAAA,EAAD,CACI3P,KAAK,KACLI,MAAOkB,KAAKkH,MAAMK,UAClB5I,YAAa2I,EACbjI,cAAY,GAEZyG,EAAAvG,EAAAC,cAAA,OAAKG,UAAU,iBACXmG,EAAAvG,EAAAC,cAAA,OAAKG,UAAU,gBACXmG,EAAAvG,EAAAC,cAACoO,EAAArO,EAAD,CACIsO,SAAU,SAAAxB,GAAC,OAAIc,EAAKU,SAASxB,IAC7B0B,IAAK,SAAAC,GAAOb,EAAKF,KAAOe,IACxBlI,EAAAvG,EAAAC,cAACyO,EAAA,EAAD,KACInI,EAAAvG,EAAAC,cAAC8O,EAAA,EAAD,CACI5L,KAAK,WACL5D,MAAM,WACN2D,KAAK,OACLI,SAAU7C,KAAK0G,cACftE,MAAO4E,EAAKe,SACZjF,UAAU,IACb9C,KAAKkH,MAAMF,KAAK7D,GACb2C,EAAAvG,EAAAC,cAAC0O,EAAA,EAAD,CACIxL,KAAK,WACL5D,MAAM,cACN2E,UAAU,YACVD,WAAW,aACXX,SAAU7C,KAAK0G,cACftE,MAAO4E,EAAKuB,SACZhF,QAASyD,EAAKmB,aAGdrC,EAAAvG,EAAAC,cAAC8O,EAAA,EAAD,CACI5L,KAAK,SACL5D,MAAM,SACN2D,KAAK,OACLI,SAAU7C,KAAK0G,cACftE,MAAO4E,EAAKgB,OACZlF,UAAU,KAI1BgD,EAAAvG,EAAAC,cAAC+O,EAAA,EAAD,KACIzI,EAAAvG,EAAAC,cAACgP,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB9I,EAAAvG,EAAAC,cAACyO,EAAA,EAAD,KACInI,EAAAvG,EAAAC,cAAC0O,EAAA,EAAD,CACIxL,KAAK,QACL5D,MAAM,QACN2E,UAAU,YACVD,WAAW,aACXX,SAAU7C,KAAK0G,cACftE,MAAO4E,EAAKiB,MACZ1E,QAAS,CACL,CAAEJ,GAAI,EAAGT,KAAM,WACf,CAAES,GAAI,EAAGT,KAAM,UACf,CAAES,GAAI,EAAGT,KAAM,eAK/BoD,EAAAvG,EAAAC,cAACgP,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB9I,EAAAvG,EAAAC,cAACyO,EAAA,EAAD,KACInI,EAAAvG,EAAAC,cAAC0O,EAAA,EAAD,CACIxL,KAAK,OACL5D,MAAM,OACN2E,UAAU,YACVD,WAAW,aACXpB,MAAO4E,EAAKvE,KACZI,SAAU7C,KAAK0G,cACfnD,QAAS,CACL,CAAEJ,GAAI,EAAGT,KAAM,WACf,CAAES,GAAI,EAAGT,KAAM,YACf,CAAES,GAAI,EAAGT,KAAM,UACf,CAAES,GAAI,EAAGT,KAAM,YAEnBI,UAAU,OAK1BgD,EAAAvG,EAAAC,cAAA,OAAKG,UAAU,eACXmG,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,eAAe8C,KAAK,UAAtC,YACsB,IACtBqD,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,aAAaE,QAASG,KAAKoH,iBAA7C,gBAQpBtB,EAAAvG,EAAAC,cAAA,OAAKG,UAAU,mBACXmG,EAAAvG,EAAAC,cAAC+O,EAAA,EAAD,CAAK5O,UAAU,+BACXmG,EAAAvG,EAAAC,cAACgP,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB9I,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CACItO,QAASG,KAAK8H,WACdnI,UAAU,0BAFd,YAGAmG,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CACItO,QAASG,KAAK2I,gBACdhJ,UAAU,0BAFd,kBAKJmG,EAAAvG,EAAAC,cAACgP,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzB9I,EAAAvG,EAAAC,cAAA,SACIqD,SAAU7C,KAAKsM,eACf3M,UAAU,6CACViD,YAAY,mBAGxBkD,EAAAvG,EAAAC,cAACqP,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACpP,UAAU,qDACjCmG,EAAAvG,EAAAC,cAAA,aACIsG,EAAAvG,EAAAC,cAAA,MAAIG,UAAU,gBACVmG,EAAAvG,EAAAC,cAAA,iBACAsG,EAAAvG,EAAAC,cAAA,MAAIG,UAAU,cAAcE,QAAS,kBAAMsN,EAAKV,WAAW,cAA3D,WACI3G,EAAAvG,EAAAC,cAAA,KAAGG,UAAS,GAAAyD,OAA+B,aAA1BpD,KAAKkH,MAAMwF,WAA4B,cAAgB,iBAA5D,+CAAAtJ,OACLpD,KAAKkH,MAAM6B,OAAoC,uBAA3B,6BAG/BjD,EAAAvG,EAAAC,cAAA,oBACAsG,EAAAvG,EAAAC,cAAA,MAAIG,UAAU,cAAcE,QAAS,kBAAMsN,EAAKV,WAAW,WAA3D,QACI3G,EAAAvG,EAAAC,cAAA,KAAGG,UAAS,GAAAyD,OAA+B,UAA1BpD,KAAKkH,MAAMwF,WAAyB,cAAgB,iBAAzD,+CAAAtJ,OACLpD,KAAKkH,MAAM6B,OAAoC,uBAA3B,6BAG/BjD,EAAAvG,EAAAC,cAAA,MAAIG,UAAU,cAAcE,QAAS,kBAAMsN,EAAKV,WAAW,UAA3D,OACI3G,EAAAvG,EAAAC,cAAA,KAAGG,UAAS,GAAAyD,OAA+B,SAA1BpD,KAAKkH,MAAMwF,WAAwB,cAAgB,iBAAxD,+CAAAtJ,OACLpD,KAAKkH,MAAM6B,OAAoC,uBAA3B,6BAG/BjD,EAAAvG,EAAAC,cAAA,MAAIG,UAAU,iBAAd,UACAmG,EAAAvG,EAAAC,cAAA,MAAIG,UAAU,cAAcE,QAAS,kBAAMsN,EAAKV,WAAW,YAA3D,SACI3G,EAAAvG,EAAAC,cAAA,KAAGG,UAAS,GAAAyD,OAA+B,WAA1BpD,KAAKkH,MAAMwF,WAA0B,cAAgB,iBAA1D,+CAAAtJ,OACLpD,KAAKkH,MAAM6B,OAAoC,uBAA3B,+BAMvCjD,EAAAvG,EAAAC,cAAA,aACK8N,GACGzC,EAAQnH,IAAI,SAACsD,EAAMpD,GACf,OACIkC,EAAAvG,EAAAC,cAAA,MAAIG,UAAU,YAAYkE,IAAKD,GAC3BkC,EAAAvG,EAAAC,cAAA,cAAMoL,EAAayC,UAAYzC,EAAaoE,SAAWpE,EAAaoE,YAAapL,GACjFkC,EAAAvG,EAAAC,cAAA,UAAKwH,EAAKsB,SACVxC,EAAAvG,EAAAC,cAAA,cAAMwH,EAAKoB,QAAQ1E,IAAI,SAACsE,GAAD,OACnBlC,EAAAvG,EAAAC,cAAA,SAG0B,IAAlBwI,EAAOmD,OACHrF,EAAAvG,EAAAC,cAAA,KAAGG,UAAU,cAAcsP,MAAO,CAAErP,MAAO,OAASe,cAAY,SAE9C,IAAlBqH,EAAOmD,OAEHrF,EAAAvG,EAAAC,cAAA,KAAGG,UAAU,cAAcsP,MAAO,CAAErP,MAAO,SAAWe,cAAY,SAElEmF,EAAAvG,EAAAC,cAAA,KAAGG,UAAU,gBAAgBsP,MAAO,CAAErP,MAAO,UAAYe,cAAY,SAVrF,QAYYqH,EAAOM,YAIvBxC,EAAAvG,EAAAC,cAAA,UAAKwH,EAAKkI,WACVpJ,EAAAvG,EAAAC,cAAA,UAAKwH,EAAKmI,UACVrJ,EAAAvG,EAAAC,cAAA,UACIsG,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CACIxO,UAAU,+BACVE,QAAS,kBAAMsN,EAAKjF,gBAAgBlB,MAExClB,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CACIxO,UAAU,6BACVE,QAAS,kBAAMsN,EAAK3E,kBAAkBxB,EAAK7D,QAGnD2C,EAAAvG,EAAAC,cAAA,MAAIK,QAAS,kBAAMsN,EAAKzE,sBAAsB1B,KAE1B,IAAhBA,EAAKmE,OACDrF,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,gBAAgBC,MAAM,aAAxC,YAEgB,IAAhBoH,EAAKmE,OAEDrF,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,gBAAgBC,MAAM,WAAxC,aAEAkG,EAAAvG,EAAAC,cAAC2O,EAAA,EAAD,CAAQxO,UAAU,gBAAgBC,MAAM,QAAxC,mBAQnC0N,GAAcpN,EAAa,GACxB4F,EAAAvG,EAAAC,cAACM,EAAA,EAAD,CACIK,YAAa,EACbD,WAAYA,EACZE,UAAWiN,EAAY,EACvBhN,mBAAoB,EACpBC,aAAcN,KAAKoP,2BAvkBhB3N,aAklBhB4N,sBACX,SAAAnI,GAAK,MAAK,CACN0D,aAAc1D,EAAM0D,eAExB,CACI9B,qBALOuG,CAObjJ","file":"static/js/23.dae9d7ec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nconst ModalInfo = ({\r\n  size,\r\n  isShowModal,\r\n  toggleModal,\r\n  children,\r\n  title,\r\n  okText,\r\n  cancelText,\r\n  clickOK,\r\n  showCancel = true,\r\n  clickCancel,\r\n  extraInfoLabel,\r\n  hiddenFooter\r\n}) => {\r\n  return (\r\n    <Modal isOpen={isShowModal} toggle={toggleModal} size={size}> \r\n      <ModalHeader>{title}</ModalHeader>\r\n      <ModalBody>{children}</ModalBody>\r\n\r\n      {!hiddenFooter && (\r\n        <ModalFooter className=\"justify-content-center\">\r\n          <Button color=\"danger\" onClick={clickOK || toggleModal}>\r\n            {okText || \"Xác nhận\"}\r\n          </Button>{\" \"}\r\n          {showCancel && (\r\n            <Button color=\"secondary\" onClick={clickCancel || toggleModal}>\r\n              {cancelText || \"Hủy bỏ\"}\r\n            </Button>\r\n          )}\r\n        </ModalFooter>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalInfo;\r\n","import React, { Component } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport './Pagination.scss'\r\n\r\nexport default class Pagination extends Component {\r\n  render() {\r\n    let { totalPages, initialPage, forcePage, pageRangeDisplayed, onPageChange } = this.props;\r\n    return (\r\n      totalPages > 0 && <ReactPaginate\r\n        disableInitialCallback={true}\r\n        initialPage={initialPage}\r\n        forcePage={forcePage}\r\n        previousLabel={<i className=\"fa fa-chevron-left\" aria-hidden=\"true\"></i>}\r\n        nextLabel={<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>}\r\n        breakLabel={'...'}\r\n        pageClassName={'page-item'}\r\n        pageLinkClassName=\"page-link\"\r\n        previousClassName='page-item'\r\n        previousLinkClassName='page-link'\r\n        nextClassName='page-item'\r\n        nextLinkClassName='page-link'\r\n        pageCount={totalPages}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={pageRangeDisplayed || 1}\r\n        onPageChange={onPageChange}\r\n        containerClassName={'pagination'}\r\n        activeLinkClassName={'active'}\r\n        activeClassName={'active'}\r\n      />\r\n    )\r\n  }\r\n}\r\n","export const pagination = {\r\n  defaultTake: 10,\r\n  initialPage: 1\r\n};\r\n\r\nexport const permissions = [\r\n  { key: \"sales\", name: \"Bán hàng\" },\r\n  { key: \"bill-management\", name: \"Quản lý hoá đơn\" },\r\n  { key: \"product-management\", name: \"Quản lý sản phẩm\" },\r\n  { key: \"promotion-management\", name: \"Quản lý khuyến mãi\" },\r\n  { key: \"user-management\", name: \"Quản lý người dùng\" },\r\n  { key: \"branch-management\", name: \"Quản lý chi nhánh\" },\r\n  { key: \"employee-management\", name: \"Quản lý nhân viên\" },\r\n  { key: \"category-management\", name: \"Quản lý danh mục\" },\r\n  { key: \"group-management\", name: \"Quản lý nhóm\" },\r\n  { key: \"notification-management\", name: \"Quản lý thông báo\" }\r\n];\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nconst ModalConfirm = ({ title, isShowModal, clickOk, toggleModal }) => {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={isShowModal} toggle={toggleModal}>\r\n        <ModalBody>\r\n          {title || \"Bạn có chắc chắn muốn xoá trường dữ liệu này?\"}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={clickOk}>\r\n            Xác nhận\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggleModal}>\r\n            Huỷ bỏ\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { isEmpty } from \"validator\";\r\nconst isRequired = value => {\r\n  if (isEmpty(value)) {\r\n    return <small className=\"form-text text-danger\">This field is required!</small>;\r\n  }\r\n};\r\n\r\nconst ValidationInput = ({\r\n  disabled,\r\n  inputClass,\r\n  title,\r\n  type,\r\n  name,\r\n  max,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  required,\r\n  validations,\r\n  accept\r\n}) => {\r\n  if (!validations) validations = [];\r\n  if (required) validations.unshift(isRequired);\r\n  return (\r\n    <FormGroup>\r\n      <Label className=\"label-input\" for={name}><strong>\r\n        {title} </strong> {required && <span className=\"text-danger\">*</span>}\r\n      </Label>\r\n      <Input\r\n        disabled={disabled}\r\n        id={name}\r\n        name={name}\r\n        max={max}\r\n        value={\"\" + value}\r\n        onChange={onChange}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className={`form-control ${inputClass}`}\r\n        validations={validations}\r\n        accept={accept}\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nValidationInput.propTypes = {\r\n  title: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nValidationInput.defaultProps = {\r\n  title: \"\",\r\n  type: \"text\",\r\n  name: \"\",\r\n  placeholder: \"\"\r\n};\r\n\r\nexport default ValidationInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\n\r\nconst SelectInput = ({\r\n  title,\r\n  placeholder,\r\n  name,\r\n  value,\r\n  options,\r\n  onChange,\r\n  inputClass,\r\n  required,\r\n  valueField,\r\n  nameField,\r\n  // defaultValue,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label className=\"label-input\" for={name}><strong>\r\n        {title}</strong>\r\n      </Label>\r\n      <select\r\n        onChange={onChange}\r\n        className={`form-control`}\r\n        type=\"select\"\r\n        name={name}\r\n        required={required}\r\n        value={value || \"\"}\r\n        // defaultValue={defaultValue || \"\"}\r\n        disabled={disabled}\r\n      >\r\n        {placeholder && <option>{placeholder}</option>}\r\n        {options.map((o, i) => {\r\n          return (\r\n            <option key={i} value={o.id}>\r\n              {o.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n  title: PropTypes.string,\r\n  options: PropTypes.array.isRequired,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nSelectInput.defaultProps = {\r\n  title: \"\",\r\n  name: \"\",\r\n  placeholder: \"\"\r\n};\r\n\r\nexport default SelectInput;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread({}, Fade.defaultProps, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Form from \"react-validation/build/form\";\r\nimport ModalConfirm from \"../../../components/modal/modal.confirm\";\r\nimport Pagination from \"../../../components/pagination/Pagination\";\r\nimport ModalInfo from \"../../../components/modal/modal.info\";\r\nimport ValidationInput from \"../../../components/common/validation.input\";\r\nimport SelectInput from \"../../../components/common/select.input\";\r\nimport questionApi from \"../../../api/api.question\";\r\nimport Api from \"../../../api/api\";\r\nimport { toastSuccess, toastError } from \"../../../helpers/toast.helper\";\r\nimport { getQuestionList } from \"../../../actions/question.list.action\";\r\nimport lodash from \"lodash\";\r\nimport { Alert, Row, Col, Button, Table, FormGroup, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport { pagination } from \"../../../constant/app.constant\";\r\n\r\nclass QuestionListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowDeleteModal: false,\r\n            isShowInfoModal: false,\r\n            isShowStatusModal: false,\r\n            isShowGeneratePDFModal: false,\r\n            item: {},\r\n            itemId: null,\r\n            params: {\r\n                skip: pagination.initialPage,\r\n                take: pagination.defaultTake\r\n            },\r\n            query: \"\",\r\n            isDesc: false,\r\n            sortName: \"status\",\r\n            activeSort: \"status\",\r\n            alertVisible: false\r\n        };\r\n        this.delayedCallback = lodash.debounce(this.search, 1000);\r\n        this.onDismissAlert = this.onDismissAlert.bind(this);\r\n    }\r\n\r\n    onModelChange = el => {\r\n        let inputName = el.target.name;\r\n        let inputValue = el.target.value.trim();\r\n        let item = Object.assign({}, this.state.item);\r\n        item[inputName] = inputValue;\r\n        this.setState({ item });\r\n    };\r\n\r\n    onDismissAlert() {\r\n        this.setState({ alertVisible: false });\r\n    }\r\n\r\n    toggleModalInfo = (item, title) => {\r\n        this.setState(prevState => ({\r\n            isShowInfoModal: !prevState.isShowInfoModal,\r\n            item: item || {},\r\n            formTitle: title\r\n        }));\r\n    };\r\n\r\n    toggleStatusUpdateModal = (item) => {\r\n        this.setState(prevState => ({\r\n            isShowStatusModal: !prevState.isShowStatusModal,\r\n            item: item || {},\r\n        }));\r\n    }\r\n\r\n    toggleGeneratePDFModal = (item) => {\r\n        this.setState(prevState => ({\r\n            isShowGeneratePDFModal: !prevState.isShowGeneratePDFModal,\r\n            item: item || {},\r\n        }));\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState(prevState => ({\r\n            isShowDeleteModal: !prevState.isShowDeleteModal\r\n        }));\r\n    };\r\n\r\n    showAddNew = () => {\r\n        let title = \"Create Question\";\r\n        let question = {\r\n            question: \"\",\r\n            answer: \"\",\r\n            level: 1,\r\n            type: 1\r\n        };\r\n        this.toggleModalInfo(question, title);\r\n    };\r\n\r\n    showUpdateModal = item => {\r\n        var answerList = item.answers.map(elm => (\r\n            {\r\n                id: elm.id,\r\n                name: elm.content\r\n            }\r\n        ))\r\n        let question = {\r\n            id: item.id,\r\n            question: item.content,\r\n            answerList: answerList,\r\n            level: item.level,\r\n            type: item.type,\r\n            answerId: answerList[0] ? answerList[0].id : \"\"\r\n        };\r\n        let title = \"Update Question\";\r\n        this.toggleModalInfo(question, title);\r\n    };\r\n\r\n    showConfirmDelete = itemId => {\r\n        this.setState(\r\n            {\r\n                itemId: itemId\r\n            },\r\n            () => this.toggleDeleteModal()\r\n        );\r\n    };\r\n\r\n    showUpdateStatusModal = (item) => {\r\n        this.toggleStatusUpdateModal(item);\r\n    };\r\n\r\n    showGeneratePDF = () => {\r\n        let item = {\r\n            level: 1,\r\n            types: 1,\r\n            quantity: 10\r\n        };\r\n        this.toggleGeneratePDFModal(item);\r\n    }\r\n\r\n    getQuestionList = (isDesc = false, sortName = \"status\") => {\r\n        let params = Object.assign({}, this.state.params, {\r\n            query: this.state.query,\r\n            isDesc: isDesc,\r\n            sortName: sortName\r\n        });\r\n        this.props.getQuestionList(params);\r\n    };\r\n\r\n    addQuestion = async () => {\r\n        try {\r\n            await questionApi.addQuestion(this.state.item);\r\n            this.getQuestionList();\r\n            this.toggleModalInfo();\r\n            toastSuccess(\"The question has been created successfully\");\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    updateQuestion = async () => {\r\n        const question = Object.assign({}, this.state.item);\r\n        try {\r\n            await questionApi.updateQuestion(question);\r\n            this.toggleModalInfo();\r\n            this.getQuestionList();\r\n            toastSuccess(\"The question has been updated successfully\");\r\n        } catch (err) {\r\n            toastError(err.message);\r\n        }\r\n    };\r\n\r\n    deleteQuestion = async () => {\r\n        try {\r\n            await questionApi.deleteQuestion(this.state.itemId);\r\n            if (this.props.questionList.questionList.sources.length === 1) {\r\n                this.setState({\r\n                    params: { ...this.state.params, skip: this.state.params.skip - 1 }\r\n                })\r\n            }\r\n            this.toggleDeleteModal();\r\n            this.getQuestionList();\r\n            toastSuccess(\"The question has been deleted successfully\");\r\n        } catch (err) {\r\n            toastError(err);\r\n        }\r\n    };\r\n\r\n    onUpdateStatus(e) {\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n        this.updateStatus();\r\n    }\r\n\r\n    updateStatus = async () => {\r\n        const { status, id, answers } = this.state.item;\r\n        const question = { status, id };\r\n        const approved = 3;\r\n\r\n        if (status === approved && answers.length > 1) {\r\n            let containApproveAnswer = false;\r\n\r\n            answers.forEach(answer => {\r\n                if (answer.status === approved) {\r\n                    containApproveAnswer = true;\r\n                }\r\n            })\r\n\r\n            if (!containApproveAnswer) {\r\n                toastError(\"Please select right answer before appove\");\r\n                return\r\n            }\r\n        }\r\n\r\n        try {\r\n            await questionApi.updateStatus(question);\r\n            this.toggleStatusUpdateModal();\r\n            this.getQuestionList();\r\n            toastSuccess(\"The status has been updated successfully\");\r\n        } catch (err) {\r\n            toastError(err);\r\n        }\r\n\r\n    }\r\n\r\n    onGeneratePDF(e) {\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n        this.generatePDF();\r\n    }\r\n\r\n    generatePDF = async () => {\r\n        const { level, types, quantity } = this.state.item;\r\n        const query = { level, types, quantity };\r\n        console.log(query)\r\n        this.onDismissAlert()\r\n        try {\r\n            var data = await Api.generatePDF(query);\r\n            this.setState({\r\n                pdfLink: data,\r\n                alertVisible: true\r\n            })\r\n            this.toggleGeneratePDFModal();\r\n        } catch (err) {\r\n            toastError(err);\r\n        }\r\n    }\r\n\r\n\r\n    saveQuestion = () => {\r\n        let { id } = this.state.item;\r\n        if (id) {\r\n            this.updateQuestion();\r\n        } else {\r\n            this.addQuestion();\r\n        }\r\n    };\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n        this.saveQuestion();\r\n    }\r\n\r\n    search = e => {\r\n        this.setState(\r\n            {\r\n                params: {\r\n                    ...this.state.params,\r\n                    skip: 1\r\n                },\r\n                query: e.target.value\r\n            },\r\n            () => {\r\n                this.getQuestionList();\r\n            }\r\n        );\r\n    };\r\n\r\n    onSearchChange = e => {\r\n        e.persist();\r\n        this.delayedCallback(e);\r\n    };\r\n\r\n    handleSort = (sortName) => {\r\n        const { isDesc } = this.state;\r\n        this.setState({\r\n            isDesc: !isDesc,\r\n            sortName: sortName,\r\n            activeSort: sortName\r\n        },\r\n            () => this.getQuestionList(this.state.isDesc, this.state.sortName)\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuestionList();\r\n    }\r\n\r\n    render() {\r\n        const { isShowDeleteModal, isShowInfoModal, item } = this.state;\r\n        const { questionList } = this.props.questionList;\r\n        const { sources, pageIndex, totalPages } = questionList;\r\n        const hasResults = questionList.sources && questionList.sources.length > 0;\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <ModalConfirm\r\n                    clickOk={this.deleteQuestion}\r\n                    isShowModal={isShowDeleteModal}\r\n                    toggleModal={this.toggleDeleteModal}\r\n                />\r\n\r\n                <Alert color=\"primary\" isOpen={this.state.alertVisible} toggle={this.onDismissAlert} fade={false}>\r\n                    PDF File Generate Success, You Can Check <a href={this.state.pdfLink} className=\"alert-link\">Here</a> \r\n                </Alert>\r\n\r\n                <Modal isOpen={this.state.isShowStatusModal} toggle={this.toggleStatusUpdateModal} >\r\n                    <ModalHeader>\r\n                        Update Status\r\n                    </ModalHeader >\r\n                    <ModalBody>\r\n                        <Form\r\n                            onSubmit={e => this.onUpdateStatus(e)}\r\n                            ref={c => { this.form = c; }}\r\n                        >\r\n                            <FormGroup>\r\n                                <SelectInput\r\n                                    name=\"status\"\r\n                                    title=\"Status\"\r\n                                    nameField=\"nameField\"\r\n                                    valueField=\"valueField\"\r\n                                    value={item.status}\r\n                                    onChange={this.onModelChange}\r\n                                    options={[\r\n                                        { id: 1, name: \"Pending\" },\r\n                                        { id: 2, name: \"Rejected\" },\r\n                                        { id: 3, name: \"Approved\" }\r\n                                    ]}\r\n                                    required={true} />\r\n                                <div className=\"text-center\">\r\n                                    <Button className=\" btn-primary\" type=\"submit\">\r\n                                        Confirm </Button>{\" \"}\r\n                                    <Button className=\"btn-danger\" onClick={this.toggleStatusUpdateModal}>\r\n                                        Cancel </Button>\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.isShowGeneratePDFModal} toggle={this.toggleGeneratePDFModal} >\r\n                    <ModalHeader>\r\n                        Generate PDF\r\n                    </ModalHeader >\r\n                    <ModalBody>\r\n                        <Form\r\n                            onSubmit={e => this.onGeneratePDF(e)}\r\n                            ref={c => { this.form = c; }}\r\n                        >\r\n                            <FormGroup>\r\n                                <SelectInput\r\n                                    name=\"level\"\r\n                                    title=\"Level\"\r\n                                    nameField=\"nameField\"\r\n                                    valueField=\"valueField\"\r\n                                    value={item.level}\r\n                                    onChange={this.onModelChange}\r\n                                    options={[\r\n                                        { id: 1, name: \"Fresher\" },\r\n                                        { id: 2, name: \"Junior\" },\r\n                                        { id: 3, name: \"Senior\" }\r\n                                    ]}\r\n                                    required={true} />\r\n                                <SelectInput\r\n                                    name=\"types\"\r\n                                    title=\"Type\"\r\n                                    nameField=\"nameField\"\r\n                                    valueField=\"valueField\"\r\n                                    value={item.types}\r\n                                    onChange={this.onModelChange}\r\n                                    options={[\r\n                                        { id: 1, name: \"BackEnd\" },\r\n                                        { id: 2, name: \"FrontEnd\" },\r\n                                        { id: 3, name: \"Design\" },\r\n                                        { id: 4, name: \"Testing\"}\r\n                                    ]}\r\n                                    required={true} />\r\n                                <SelectInput\r\n                                    name=\"quantity\"\r\n                                    title=\"Quantity\"\r\n                                    nameField=\"nameField\"\r\n                                    valueField=\"valueField\"\r\n                                    value={item.quantity}\r\n                                    onChange={this.onModelChange}\r\n                                    options={[\r\n                                        { id: 10, name: \"10\" },\r\n                                        { id: 20, name: \"20\" },\r\n                                        { id: 30, name: \"30\" },\r\n                                        { id: 40, name: \"40\" }\r\n                                    ]}\r\n                                    required={true} />\r\n                                <div className=\"text-center\">\r\n                                    <Button className=\" btn-primary\" type=\"submit\">\r\n                                        Confirm </Button>{\" \"}\r\n                                    <Button className=\"btn-danger\" onClick={this.toggleGeneratePDFModal}>\r\n                                        Cancel </Button>\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <ModalInfo\r\n                    size=\"lg\"\r\n                    title={this.state.formTitle}\r\n                    isShowModal={isShowInfoModal}\r\n                    hiddenFooter\r\n                >\r\n                    <div className=\"modal-wrapper\">\r\n                        <div className=\"form-wrapper\">\r\n                            <Form\r\n                                onSubmit={e => this.onSubmit(e)}\r\n                                ref={c => { this.form = c; }}>\r\n                                <FormGroup>\r\n                                    <ValidationInput\r\n                                        name=\"question\"\r\n                                        title=\"Question\"\r\n                                        type=\"text\"\r\n                                        onChange={this.onModelChange}\r\n                                        value={item.question}\r\n                                        required={true} />\r\n                                    {this.state.item.id ? (\r\n                                        <SelectInput\r\n                                            name=\"answerId\"\r\n                                            title=\"Best Answer\"\r\n                                            nameField=\"nameField\"\r\n                                            valueField=\"valueField\"\r\n                                            onChange={this.onModelChange}\r\n                                            value={item.answerId}\r\n                                            options={item.answerList}\r\n                                        />\r\n                                    ) : (\r\n                                            <ValidationInput\r\n                                                name=\"answer\"\r\n                                                title=\"Answer\"\r\n                                                type=\"text\"\r\n                                                onChange={this.onModelChange}\r\n                                                value={item.answer}\r\n                                                required={true} />\r\n                                        )}\r\n                                </FormGroup>\r\n\r\n                                <Row>\r\n                                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <SelectInput\r\n                                                name=\"level\"\r\n                                                title=\"Level\"\r\n                                                nameField=\"nameField\"\r\n                                                valueField=\"valueField\"\r\n                                                onChange={this.onModelChange}\r\n                                                value={item.level}\r\n                                                options={[\r\n                                                    { id: 1, name: \"Fresher\" },\r\n                                                    { id: 2, name: \"Junior\" },\r\n                                                    { id: 3, name: \"Senior\" },\r\n                                                ]} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\">\r\n                                        <FormGroup>\r\n                                            <SelectInput\r\n                                                name=\"type\"\r\n                                                title=\"Type\"\r\n                                                nameField=\"nameField\"\r\n                                                valueField=\"valueField\"\r\n                                                value={item.type}\r\n                                                onChange={this.onModelChange}\r\n                                                options={[\r\n                                                    { id: 1, name: \"BackEnd\" },\r\n                                                    { id: 2, name: \"FrontEnd\" },\r\n                                                    { id: 3, name: \"Design\" },\r\n                                                    { id: 4, name: \"Testing\"}\r\n                                                ]}\r\n                                                required={true} />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <div className=\"text-center\">\r\n                                    <Button className=\" btn-primary\" type=\"submit\">\r\n                                        Confirm </Button>{\" \"}\r\n                                    <Button className=\"btn-danger\" onClick={this.toggleModalInfo}>\r\n                                        Cancel </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </ModalInfo>\r\n\r\n                <div className=\"animated fadeIn\">\r\n                    <Row className=\"flex-container header-table\">\r\n                        <Col xs=\"5\" sm=\"5\" md=\"5\" lg=\"5\">\r\n                            <Button\r\n                                onClick={this.showAddNew}\r\n                                className=\"btn btn-success btn-sm\" > Create </Button>\r\n                            <Button\r\n                                onClick={this.showGeneratePDF}\r\n                                className=\"btn btn-warning btn-sm\" > GeneratePDF </Button>\r\n                        </Col>\r\n\r\n                        <Col xs=\"5\" sm=\"5\" md=\"5\" lg=\"5\">\r\n                            <input\r\n                                onChange={this.onSearchChange}\r\n                                className=\"form-control form-control-sm custom_search\"\r\n                                placeholder=\"Searching...\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Table responsive bordered className=\"react-bs-table react-bs-table-bordered data-table\">\r\n                        <thead>\r\n                            <tr className=\"table-header\">\r\n                                <th>STT</th>\r\n                                <th className=\"sort-column\" onClick={() => this.handleSort(\"question\")}>Question\r\n                                    <i className={`${this.state.activeSort === \"question\" ? \"active-sort\" : \"disactive-sort\"} \r\n                                        ${!this.state.isDesc ? \"fa fa-caret-down fa-lg\" : \"fa fa-caret-up fa-lg\"}`}>\r\n                                    </i>\r\n                                </th>\r\n                                <th >Answer</th>\r\n                                <th className=\"sort-column\" onClick={() => this.handleSort(\"level\")}>Level\r\n                                    <i className={`${this.state.activeSort === \"level\" ? \"active-sort\" : \"disactive-sort\"} \r\n                                        ${!this.state.isDesc ? \"fa fa-caret-down fa-lg\" : \"fa fa-caret-up fa-lg\"}`}>\r\n                                    </i>\r\n                                </th>\r\n                                <th className=\"sort-column\" onClick={() => this.handleSort(\"type\")}>Type\r\n                                    <i className={`${this.state.activeSort === \"type\" ? \"active-sort\" : \"disactive-sort\"} \r\n                                        ${!this.state.isDesc ? \"fa fa-caret-down fa-lg\" : \"fa fa-caret-up fa-lg\"}`}>\r\n                                    </i>\r\n                                </th>\r\n                                <th className=\"custom_action\">Action</th>\r\n                                <th className=\"sort-column\" onClick={() => this.handleSort(\"status\")}>Status\r\n                                    <i className={`${this.state.activeSort === \"status\" ? \"active-sort\" : \"disactive-sort\"} \r\n                                        ${!this.state.isDesc ? \"fa fa-caret-down fa-lg\" : \"fa fa-caret-up fa-lg\"}`}>\r\n                                    </i>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {hasResults &&\r\n                                sources.map((item, i) => {\r\n                                    return (\r\n                                        <tr className=\"table-row\" key={i}>\r\n                                            <td> {questionList.pageIndex * questionList.pageSize - questionList.pageSize + ++i}</td>\r\n                                            <td>{item.content}</td>\r\n                                            <td> {item.answers.map((answer) => (\r\n                                                <p>\r\n                                                    {\r\n\r\n                                                        answer.status === 2 ?\r\n                                                            <i className=\"fa fa-times\" style={{ color: \"red\" }} aria-hidden=\"true\"></i> :\r\n\r\n                                                            answer.status === 3 ?\r\n\r\n                                                                <i className=\"fa fa-check\" style={{ color: \"green\" }} aria-hidden=\"true\"></i> :\r\n\r\n                                                                <i className=\"fa fa-spinner\" style={{ color: \"orange\" }} aria-hidden=\"true\"></i>\r\n                                                    }\r\n                                                    &nbsp; {answer.content}\r\n                                                </p>\r\n                                            ))}\r\n                                            </td>\r\n                                            <td>{item.levelText}</td>\r\n                                            <td>{item.typeText}</td>\r\n                                            <td>\r\n                                                <Button\r\n                                                    className=\"btn btn-primary fa fa-pencil\"\r\n                                                    onClick={() => this.showUpdateModal(item)} />\r\n\r\n                                                <Button\r\n                                                    className=\"btn btn-danger fa fa-trash\"\r\n                                                    onClick={() => this.showConfirmDelete(item.id)} />\r\n                                            </td>\r\n\r\n                                            <td onClick={() => this.showUpdateStatusModal(item)}>{\r\n\r\n                                                item.status === 2 ?\r\n                                                    <Button className=\"status_button\" color=\"secondary\"> Reject </Button> :\r\n\r\n                                                    item.status === 3 ?\r\n\r\n                                                        <Button className=\"status_button\" color=\"success\"> Approve </Button> :\r\n\r\n                                                        <Button className=\"status_button\" color=\"info\"> Pending </Button>}</td>\r\n                                        </tr>\r\n                                    );\r\n\r\n                                })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    {hasResults && totalPages > 1 &&\r\n                        <Pagination\r\n                            initialPage={0}\r\n                            totalPages={totalPages}\r\n                            forcePage={pageIndex - 1}\r\n                            pageRangeDisplayed={2}\r\n                            onPageChange={this.handlePageClick}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        questionList: state.questionList\r\n    }),\r\n    {\r\n        getQuestionList\r\n    }\r\n)(QuestionListPage);\r\n"],"sourceRoot":""}