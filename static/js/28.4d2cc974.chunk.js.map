{"version":3,"sources":["components/modal/modal.info.js","components/pagination/Pagination.js","constant/app.constant.js","components/common/validation.input.js","pages/admin/emailTemplateManagement/email.template.list.page.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","ModalInfo","_ref","size","isShowModal","toggleModal","children","title","okText","cancelText","clickOK","_ref$showCancel","showCancel","clickCancel","hiddenFooter","extraInfoLabel","a","createElement","isOpen","toggle","className","color","onClick","Pagination","_this$props","this","props","totalPages","initialPage","forcePage","pageRangeDisplayed","onPageChange","react__WEBPACK_IMPORTED_MODULE_5___default","react_paginate__WEBPACK_IMPORTED_MODULE_6___default","disableInitialCallback","previousLabel","aria-hidden","nextLabel","breakLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageCount","marginPagesDisplayed","containerClassName","activeLinkClassName","activeClassName","Component","d","__webpack_exports__","pagination","defaultTake","react_validation_build_input__WEBPACK_IMPORTED_MODULE_3__","react_validation_build_input__WEBPACK_IMPORTED_MODULE_3___default","validator__WEBPACK_IMPORTED_MODULE_4__","isRequired","value","isEmpty","ValidationInput","disabled","inputClass","type","name","max","placeholder","onChange","required","validations","accept","unshift","for","id","concat","defaultProps","EmailTemplateListPage","_this","Object","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","getEmailTemplateList","params","assign","state","query","sortName","isDesc","setState","item","search","e","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","skip","target","onSearchChange","persist","delayedCallback","onModelChange","inputName","inputValue","files","onEditerChange","body","editor","getData","onEmailChange","join","uploadFile","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","attachments","result","length","temp","i","fullName","dotIndex","extension","fileName","wrap","_context","prev","next","ApiEmailTemplate","uploadFiles","sent","lastIndexOf","substring","push","link","abrupt","t0","stop","_x","apply","arguments","removeFile","templateAttachments","updateEmailTemplate","_callee2","emailTemplate","_context2","toggleModalInfo","toastSuccess","toastError","isShowInfoModal","prevState","formTitle","showUpdateModal","sort","isCheck","handlePageClick","selected","componentDidMount","take","lodash","debounce","preventDefault","form","validateAll","_this2","_this$state","emailTemplateList","sources","hasResults","pageIndex","react__WEBPACK_IMPORTED_MODULE_8___default","_components_modal_modal_info__WEBPACK_IMPORTED_MODULE_25__","react_validation_build_form__WEBPACK_IMPORTED_MODULE_23___default","onSubmit","ref","c","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","_components_common_validation_input__WEBPACK_IMPORTED_MODULE_22__","from","fromName","subject","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","react_multi_email__WEBPACK_IMPORTED_MODULE_27__","emails","cc","split","validateEmail","email","isEmail","getLabel","index","removeEmail","data-tag","key","data-tag-handle","bcc","lg","map","val","idx","reactstrap__WEBPACK_IMPORTED_MODULE_16__","defaultValue","multiple","ckeditor4_react__WEBPACK_IMPORTED_MODULE_21___default","data","config","extraPlugins","reactstrap__WEBPACK_IMPORTED_MODULE_17__","xs","sm","md","reactstrap__WEBPACK_IMPORTED_MODULE_18__","responsive","bordered","style","wordBreak","pageSize","whiteSpace","textAlign","react__WEBPACK_IMPORTED_MODULE_8__","href","rel","download","_components_pagination_Pagination__WEBPACK_IMPORTED_MODULE_19__","page","mapDispathToProps","connect"],"mappings":"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","file":"static/js/28.4d2cc974.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nconst ModalInfo = ({\r\n  size,\r\n  isShowModal,\r\n  toggleModal,\r\n  children,\r\n  title,\r\n  okText,\r\n  cancelText,\r\n  clickOK,\r\n  showCancel = true,\r\n  clickCancel,\r\n  extraInfoLabel,\r\n  hiddenFooter\r\n}) => {\r\n  return (\r\n    <Modal isOpen={isShowModal} toggle={toggleModal} size={size}> \r\n      <ModalHeader>{title}</ModalHeader>\r\n      <ModalBody>{children}</ModalBody>\r\n\r\n      {!hiddenFooter && (\r\n        <ModalFooter className=\"justify-content-center\">\r\n          <Button color=\"danger\" onClick={clickOK || toggleModal}>\r\n            {okText || \"Xác nhận\"}\r\n          </Button>{\" \"}\r\n          {showCancel && (\r\n            <Button color=\"secondary\" onClick={clickCancel || toggleModal}>\r\n              {cancelText || \"Hủy bỏ\"}\r\n            </Button>\r\n          )}\r\n        </ModalFooter>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalInfo;\r\n","import React, { Component } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport './Pagination.scss'\r\n\r\nexport default class Pagination extends Component {\r\n  render() {\r\n    let { totalPages, initialPage, forcePage, pageRangeDisplayed, onPageChange } = this.props;\r\n    return (\r\n      totalPages > 0 && <ReactPaginate\r\n        disableInitialCallback={true}\r\n        initialPage={initialPage}\r\n        forcePage={forcePage}\r\n        previousLabel={<i className=\"fa fa-chevron-left\" aria-hidden=\"true\"></i>}\r\n        nextLabel={<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>}\r\n        breakLabel={'...'}\r\n        pageClassName={'page-item'}\r\n        pageLinkClassName=\"page-link\"\r\n        previousClassName='page-item'\r\n        previousLinkClassName='page-link'\r\n        nextClassName='page-item'\r\n        nextLinkClassName='page-link'\r\n        pageCount={totalPages}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={pageRangeDisplayed || 1}\r\n        onPageChange={onPageChange}\r\n        containerClassName={'pagination'}\r\n        activeLinkClassName={'active'}\r\n        activeClassName={'active'}\r\n      />\r\n    )\r\n  }\r\n}\r\n","export const pagination = {\r\n  defaultTake: 10,\r\n  initialPage: 1\r\n};\r\n\r\nexport const permissions = [\r\n  { key: \"sales\", name: \"Bán hàng\" },\r\n  { key: \"bill-management\", name: \"Quản lý hoá đơn\" },\r\n  { key: \"product-management\", name: \"Quản lý sản phẩm\" },\r\n  { key: \"promotion-management\", name: \"Quản lý khuyến mãi\" },\r\n  { key: \"user-management\", name: \"Quản lý người dùng\" },\r\n  { key: \"branch-management\", name: \"Quản lý chi nhánh\" },\r\n  { key: \"employee-management\", name: \"Quản lý nhân viên\" },\r\n  { key: \"category-management\", name: \"Quản lý danh mục\" },\r\n  { key: \"group-management\", name: \"Quản lý nhóm\" },\r\n  { key: \"notification-management\", name: \"Quản lý thông báo\" }\r\n];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { isEmpty } from \"validator\";\r\nconst isRequired = value => {\r\n  if (isEmpty(value)) {\r\n    return <small className=\"form-text text-danger\">This field is required!</small>;\r\n  }\r\n};\r\n\r\nconst ValidationInput = ({\r\n  disabled,\r\n  inputClass,\r\n  title,\r\n  type,\r\n  name,\r\n  max,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  required,\r\n  validations,\r\n  accept\r\n}) => {\r\n  if (!validations) validations = [];\r\n  if (required) validations.unshift(isRequired);\r\n  return (\r\n    <FormGroup>\r\n      <Label className=\"label-input\" for={name}><strong>\r\n        {title} </strong> {required && <span className=\"text-danger\">*</span>}\r\n      </Label>\r\n      <Input\r\n        disabled={disabled}\r\n        id={name}\r\n        name={name}\r\n        max={max}\r\n        value={\"\" + value}\r\n        onChange={onChange}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className={`form-control ${inputClass}`}\r\n        validations={validations}\r\n        accept={accept}\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nValidationInput.propTypes = {\r\n  title: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nValidationInput.defaultProps = {\r\n  title: \"\",\r\n  type: \"text\",\r\n  name: \"\",\r\n  placeholder: \"\"\r\n};\r\n\r\nexport default ValidationInput;\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getEmailTemplateList } from '../../../actions/email.template.list.action';\r\nimport { pagination } from \"../../../constant/app.constant\";\r\nimport { Row, Col, Button, Table, Label, FormGroup, Input } from \"reactstrap\";\r\nimport Pagination from \"../../../components/pagination/Pagination\";\r\nimport lodash from 'lodash';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport ValidationInput from \"../../../components/common/validation.input\";\r\nimport Form from 'react-validation/build/form';\r\nimport { toastSuccess, toastError } from \"../../../helpers/toast.helper\";\r\nimport ModalInfo from \"../../../components/modal/modal.info\";\r\nimport ApiEmailTemplate from '../../../api/api.email.template';\r\nimport { ReactMultiEmail, isEmail } from 'react-multi-email';\r\nimport 'react-multi-email/style.css';\r\nclass EmailTemplateListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowInfoModal: false,\r\n            formTitle: \"\",\r\n            item: {},\r\n            params: {\r\n                skip: pagination.initialPage,\r\n                take: pagination.defaultTake\r\n            },\r\n            sortName: \"\",\r\n            isDesc: false,\r\n            query: \"\"\r\n        }\r\n        this.delayedCallback = lodash.debounce(this.search, 1000);\r\n    }\r\n\r\n    getEmailTemplateList = () => {\r\n        let params = Object.assign({}, this.state.params, {\r\n            query: this.state.query,\r\n            sortName: this.state.sortName,\r\n            isDesc: this.state.isDesc\r\n        });\r\n        this.setState({\r\n            item: {}\r\n        });\r\n        this.props.getEmailTemplateList(params);\r\n    }\r\n\r\n    search = e => {\r\n        this.setState(\r\n            {\r\n                params: {\r\n                    ...this.state.params,\r\n                    skip: 1\r\n                },\r\n                query: e.target.value\r\n            },\r\n            () => {\r\n                this.getEmailTemplateList();\r\n            }\r\n        );\r\n    };\r\n\r\n    onSearchChange = e => {\r\n        e.persist();\r\n        this.delayedCallback(e);\r\n    };\r\n\r\n    onModelChange = (e) => {\r\n        let inputName = e.target.name;\r\n        let inputValue = {};\r\n        if (inputName === \"templateAttachments\") {\r\n            inputValue = e.target.files\r\n        }\r\n        else {\r\n            inputValue = e.target.value;\r\n        }\r\n        let item = { ...this.state.item };\r\n        item[inputName] = inputValue;\r\n        this.setState({\r\n            item\r\n        });\r\n    }\r\n\r\n    onEditerChange = e => {\r\n        let item = { ...this.state.item };\r\n        item.body = e.editor.getData();\r\n        this.setState({\r\n            item\r\n        });\r\n    }\r\n\r\n    onEmailChange = (e, type) => {\r\n        let item = { ...this.state.item };\r\n        item[type] = e.join(\" \");\r\n        this.setState({\r\n            item\r\n        });\r\n    }\r\n\r\n    uploadFile = async (attachments) => {\r\n        var result;\r\n        try {\r\n            if (!attachments) {\r\n                result = [];\r\n            }\r\n            else {\r\n                if (attachments.length > 1) {\r\n                    result = await ApiEmailTemplate.uploadFiles(\"templateAttachment\", attachments);\r\n                } else {\r\n                    result = await ApiEmailTemplate.uploadFile(\"templateAttachment\", attachments[0]);\r\n                }\r\n                var length = attachments.length;\r\n                var temp = [];\r\n                for (let i = 0; i < length; i++) {\r\n                    var fullName = attachments[i].name;\r\n                    var dotIndex = fullName.lastIndexOf(\".\");\r\n                    var extension = fullName.substring(dotIndex, fullName.length);\r\n                    var fileName = fullName.substring(0, dotIndex);\r\n                    temp.push({\r\n                        link: length > 1 ? result[i] : result,\r\n                        fileName,\r\n                        extension\r\n                    })\r\n                }\r\n                return temp;\r\n            }\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    removeFile = () => {\r\n        this.setState({\r\n            item: { ...this.state.item, templateAttachments: [] }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n        this.updateEmailTemplate();\r\n    }\r\n\r\n    updateEmailTemplate = async () => {\r\n        const emailTemplate = Object.assign({}, this.state.item);\r\n        const { templateAttachments } = this.state.item;\r\n        if (emailTemplate.templateAttachments && emailTemplate.templateAttachments.length > 0 && !emailTemplate.templateAttachments[0].link) {\r\n            emailTemplate.templateAttachments = await this.uploadFile(templateAttachments);\r\n        }\r\n        try {\r\n            await ApiEmailTemplate.updateEmailTemplate(emailTemplate);\r\n            this.toggleModalInfo();\r\n            this.getEmailTemplateList();\r\n            toastSuccess(\"The email template has been updated successfully\");\r\n        } catch (err) {\r\n            toastError(err);\r\n        }\r\n    }\r\n\r\n    toggleModalInfo = (item, title) => {\r\n        if (this.state.isShowInfoModal === true) {\r\n            item = {};\r\n        }\r\n        this.setState(prevState => ({\r\n            isShowInfoModal: !prevState.isShowInfoModal,\r\n            item: item || {},\r\n            formTitle: title\r\n        }));\r\n    };\r\n\r\n    showUpdateModal = item => {\r\n        let title = \"Update Email Template\";\r\n        this.toggleModalInfo(item, title);\r\n    };\r\n\r\n    sort = (sortName) => {\r\n        let isCheck = (sortName === this.state.sortName) || (this.state.sortName === \"\");\r\n        this.setState(\r\n            {\r\n                params: {\r\n                    ...this.state.params,\r\n                    skip: 1\r\n                },\r\n                sortName,\r\n                isDesc: isCheck ? !this.state.isDesc : false\r\n            },\r\n            () => this.getEmailTemplateList()\r\n        );\r\n    };\r\n\r\n    handlePageClick = e => {\r\n        this.setState(\r\n            {\r\n                params: {\r\n                    ...this.state.params,\r\n                    skip: e.selected + 1\r\n                }\r\n            },\r\n            () => this.getEmailTemplateList()\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.getEmailTemplateList();\r\n    }\r\n\r\n    render() {\r\n        const { item, isShowInfoModal } = this.state;\r\n        const { emailTemplateList } = this.props.emailTemplateList;\r\n        const { sources } = emailTemplateList;\r\n        const hasResults = emailTemplateList.sources && emailTemplateList.sources.length > 0;\r\n        const { pageIndex, totalPages } = emailTemplateList;\r\n        return (\r\n            <div>\r\n                <ModalInfo\r\n                    size=\"lg\"\r\n                    title={this.state.formTitle}\r\n                    isShowModal={isShowInfoModal}\r\n                    hiddenFooter>\r\n\r\n                    <div className=\"modal-wrapper\">\r\n                        <div className=\"form-wrapper\">\r\n                            <Form onSubmit={e => this.onSubmit(e)} ref={c => { this.form = c; }}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ValidationInput\r\n                                            name=\"name\"\r\n                                            title=\"Name\"\r\n                                            type=\"text\"\r\n                                            required={true}\r\n                                            value={item.name}\r\n                                            onChange={this.onModelChange} />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <ValidationInput\r\n                                            name=\"type\"\r\n                                            title=\"Type\"\r\n                                            type=\"text\"\r\n                                            required={true}\r\n                                            value={item.type === 1 ? \"Job\" : item.type === 2 ? \"Interview\" : item.type === 3 ? \"Calendar\" : null}\r\n                                            disabled={true} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ValidationInput\r\n                                            name=\"from\"\r\n                                            title=\"From\"\r\n                                            type=\"email\"\r\n                                            required={true}\r\n                                            value={item.from}\r\n                                            onChange={this.onModelChange} />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <ValidationInput\r\n                                            name=\"fromName\"\r\n                                            title=\"From Name\"\r\n                                            type=\"text\"\r\n                                            required={true}\r\n                                            value={item.fromName}\r\n                                            onChange={this.onModelChange} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ValidationInput\r\n                                            name=\"subject\"\r\n                                            title=\"Subject\"\r\n                                            type=\"text\"\r\n                                            required={true}\r\n                                            value={item.subject}\r\n                                            onChange={this.onModelChange} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Label className=\"label-input\"><strong> Cc</strong></Label>\r\n                                            <ReactMultiEmail\r\n                                                emails={item.cc ? item.cc.split(\" \") : []}\r\n                                                onChange={(e) => this.onEmailChange(e, \"cc\")}\r\n                                                validateEmail={email => {\r\n                                                    return isEmail(email); // return boolean\r\n                                                }}\r\n                                                getLabel={(email, index, removeEmail) => {\r\n                                                    return (\r\n                                                        <div data-tag key={index}>\r\n                                                            {email}\r\n                                                            <span data-tag-handle onClick={() => removeEmail(index)}>\r\n                                                                ×\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Label className=\"label-input\"><strong> Bcc</strong></Label>\r\n                                            <ReactMultiEmail\r\n                                                emails={item.bcc ? item.bcc.split(\" \") : []}\r\n                                                onChange={(e) => this.onEmailChange(e, \"bcc\")}\r\n                                                validateEmail={email => {\r\n                                                    return isEmail(email); // return boolean\r\n                                                }}\r\n                                                getLabel={(email, index, removeEmail) => {\r\n                                                    return (\r\n                                                        <div data-tag key={index}>\r\n                                                            {email}\r\n                                                            <span data-tag-handle onClick={() => removeEmail(index)}>\r\n                                                                ×\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Label for=\"examplePicture\"><strong>Attachment: </strong></Label>\r\n                                            {item.templateAttachments && item.templateAttachments.length > 0 && item.templateAttachments[0].link ?\r\n                                                <Row>\r\n                                                    <Col lg='10'>\r\n                                                        {item.templateAttachments.map((val, idx) =>\r\n                                                            <Input\r\n                                                                key={idx}\r\n                                                                name=\"templateAttachments\"\r\n                                                                title=\"Attachment\"\r\n                                                                defaultValue={val.fileName}\r\n                                                                disabled={true}\r\n                                                                type=\"text\"\r\n                                                            />\r\n                                                        )}\r\n                                                    </Col>\r\n\r\n                                                    <Col lg='2'>\r\n                                                        <i className=\"fa fa-times-circle fa-2x\" onClick={this.removeFile} aria-hidden=\"true\"></i>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                : <Input\r\n                                                    name=\"templateAttachments\"\r\n                                                    title=\"Attachment\"\r\n                                                    type=\"file\"\r\n                                                    multiple\r\n                                                    onChange={this.onModelChange} />\r\n                                            }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <FormGroup>\r\n                                    <Label><strong>Content </strong><span className=\"text-danger\">*</span></Label>\r\n                                    <CKEditor\r\n                                        data={item.body}\r\n                                        onChange={this.onEditerChange}\r\n                                        config={{\r\n                                            \"extraPlugins\": 'divarea'\r\n                                        }}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                                <div className=\"text-center \">\r\n                                    <Button className=\" btn-primary\" type=\"submit\" > Confirm </Button>{\" \"}\r\n                                    <Button className=\"btn-danger\" onClick={this.toggleModalInfo}> Cancel </Button>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </ModalInfo>\r\n\r\n                <div className=\"animated fadeIn\">\r\n                    <Row className=\"flex-container header-table\">\r\n                        <Col xs=\"5\" sm=\"5\" md=\"5\" lg=\"5\">\r\n                        </Col>\r\n                        <Col xs=\"5\" sm=\"5\" md=\"5\" lg=\"5\"  >\r\n                            <input onChange={this.onSearchChange} className=\"form-control form-control-sm custom_search\"\r\n                                placeholder=\"Searching...\" />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Table responsive bordered className=\"react-bs-table react-bs-table-bordered data-table\" style={{ \"wordBreak\": \"break-word\" }}>\r\n                        <thead>\r\n                            <tr className=\"table-header\">\r\n                                <th>STT</th>\r\n                                <th><div className=\"d-flex\"> Name <i onClick={() => this.sort(\"Name\")} className={`${this.state.isDesc && (this.state.sortName === \"Name\" || this.state.sortName === \"\") ? \"fa fa-caret-up fa-lg\" : \"fa fa-caret-down fa-lg\"} ${(this.state.sortName === \"Name\" || this.state.sortName === \"\") ? \"active-sort\" : \"disactive-sort\"} `} ></i></div></th>\r\n                                <th>Type</th>\r\n                                <th>Subject</th>\r\n                                <th>From</th>\r\n                                <th><div className=\"d-flex\">FromName <i onClick={() => this.sort(\"FromName\")} className={`${this.state.isDesc && (this.state.sortName === \"FromName\") ? \"fa fa-caret-up fa-lg\" : \"fa fa-caret-down fa-lg\"} ${(this.state.sortName === \"FromName\") ? \"active-sort\" : \"disactive-sort\"} `} ></i></div></th>\r\n                                <th>CC</th>\r\n                                <th>BCC</th>\r\n                                <th>Attachments</th>\r\n                                <th className=\"custom_action\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody >\r\n                            {hasResults && sources.map((item, i) => {\r\n                                return (\r\n                                    <tr className=\"table-row\" key={i}>\r\n                                        <td> {emailTemplateList.pageIndex !== 0 ? emailTemplateList.pageIndex * emailTemplateList.pageSize - emailTemplateList.pageSize + ++i : ++i}</td>\r\n                                        <td> {item.name} </td>\r\n                                        <td style={{ \"whiteSpace\": \"nowrap\" }}> {item.type === 1 ? \"Job\" : item.type === 2 ? \"Interview\" : item.type === 3 ? \"Calendar\" : null} </td>\r\n                                        <td> {item.subject} </td>\r\n                                        <td> {item.from} </td>\r\n                                        <td> {item.fromName} </td>\r\n                                        <td style={{ \"textAlign\": \"left\" }}> {item.cc.split(\" \").map((item, i) => item).join(\", \")} </td>\r\n                                        <td style={{ \"textAlign\": \"left\" }}> {item.bcc.split(\" \").map((item, i) => item).join(\", \")} </td>\r\n                                        <td style={{ \"textAlign\": \"left\" }}> {item.templateAttachments.map((item, i) => {\r\n                                            return (\r\n                                                <Fragment key={i}>\r\n                                                    {i + 1}. <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\" download>{`${item.fileName}${item.extension}`}</a><br />\r\n                                                </Fragment>\r\n                                            )\r\n                                        })} </td>\r\n                                        <td>\r\n                                            <div>\r\n                                                <Button className=\"btn btn-primary fa fa-pencil\"\r\n                                                    onClick={() => this.showUpdateModal(item)} />\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    {hasResults && totalPages > 1 &&\r\n                        <Pagination\r\n                            totalPages={totalPages}\r\n                            page={pageIndex}\r\n                            initialPage={0}\r\n                            forcePage={pageIndex - 1}\r\n                            pageRangeDisplayed={2}\r\n                            onPageChange={this.handlePageClick} />}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    emailTemplateList: state.emailTemplateList\r\n});\r\n\r\nconst mapDispathToProps = {\r\n    getEmailTemplateList\r\n}\r\nexport default connect(mapStateToProps, mapDispathToProps)(EmailTemplateListPage);"],"sourceRoot":""}