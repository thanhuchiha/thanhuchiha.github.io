{"version":3,"sources":["components/modal/modal.info.js","components/pagination/Pagination.js","constant/app.constant.js","components/modal/modal.confirm.js","components/common/validation.input.js","components/common/select.input.js","pages/admin/employeeManagement/employee.list.page.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","ModalInfo","_ref","size","isShowModal","toggleModal","children","title","okText","cancelText","clickOK","_ref$showCancel","showCancel","clickCancel","hiddenFooter","extraInfoLabel","a","createElement","isOpen","toggle","className","color","onClick","Pagination","_this$props","this","props","totalPages","initialPage","forcePage","pageRangeDisplayed","onPageChange","react__WEBPACK_IMPORTED_MODULE_5___default","react_paginate__WEBPACK_IMPORTED_MODULE_6___default","disableInitialCallback","previousLabel","aria-hidden","nextLabel","breakLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageCount","marginPagesDisplayed","containerClassName","activeLinkClassName","activeClassName","Component","d","__webpack_exports__","pagination","defaultTake","ModalConfirm","clickOk","react_validation_build_input__WEBPACK_IMPORTED_MODULE_3__","react_validation_build_input__WEBPACK_IMPORTED_MODULE_3___default","validator__WEBPACK_IMPORTED_MODULE_4__","isRequired","value","isEmpty","ValidationInput","disabled","inputClass","type","name","max","placeholder","onChange","required","validations","accept","unshift","for","id","concat","defaultProps","SelectInput","options","valueField","nameField","map","o","i","key","EmployeeListPage","_this","Object","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","sortName","isCheck","state","setState","params","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","skip","isDesc","getEmployeeList","handlePageClick","e","selected","search","query","target","onSearchChange","persist","delayedCallback","deleteEmployee","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_thanh_nguyenvan_Desktop_HR_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","employeeApi","itemId","employeeList","sources","length","toggleDeleteModal","toastSuccess","t0","toastError","stop","prevState","isShowDeleteModal","showConfirmDelete","showUpdateModal","item","birthday","moment","format","toggleModalInfo","onModelChange","el","inputName","inputValue","trim","assign","updateEmployee","_callee2","_context2","addEmployee","_callee3","_context3","abrupt","saveEmployee","onSubmit","preventDefault","form","validateAll","showAddNew","gender","levelEmp","email","isShowInfoModal","formTitle","take","valueSelected","lodash","debounce","_this2","_this$state","pageIndex","hasResult","react__WEBPACK_IMPORTED_MODULE_8___default","_components_modal_modal_confirm__WEBPACK_IMPORTED_MODULE_14__","_components_modal_modal_info__WEBPACK_IMPORTED_MODULE_13__","react_validation_build_form__WEBPACK_IMPORTED_MODULE_10___default","ref","c","reactstrap__WEBPACK_IMPORTED_MODULE_17__","_components_common_validation_input__WEBPACK_IMPORTED_MODULE_23__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","xs","sm","md","lg","_components_common_select_input__WEBPACK_IMPORTED_MODULE_24__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","responsive","bordered","levelEmpText","genderText","_components_pagination_Pagination__WEBPACK_IMPORTED_MODULE_26__","React","connect"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAuCeQ,IAnCG,SAAAC,GAaZ,IAZJC,EAYID,EAZJC,KACAC,EAWIF,EAXJE,YACAC,EAUIH,EAVJG,YACAC,EASIJ,EATJI,SACAC,EAQIL,EARJK,MACAC,EAOIN,EAPJM,OACAC,EAMIP,EANJO,WACAC,EAKIR,EALJQ,QAKIC,EAAAT,EAJJU,kBAII,IAAAD,KAHJE,EAGIX,EAHJW,YAEAC,GACIZ,EAFJa,eAEIb,EADJY,cAEA,OACEpB,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,CAAOsB,OAAQd,EAAae,OAAQd,EAAaF,KAAMA,GACrDT,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,KAAcU,GACdb,EAAAsB,EAAAC,cAACnB,EAAA,EAAD,KAAYQ,IAEVQ,GACApB,EAAAsB,EAAAC,cAAClB,EAAA,EAAD,CAAaqB,UAAU,0BACrB1B,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAQqB,MAAM,SAASC,QAASZ,GAAWL,GACxCG,GAAU,oBACH,IACTI,GACClB,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAQqB,MAAM,YAAYC,QAAST,GAAeR,GAC/CI,GAAc,sKC1BRc,2LACV,IAAAC,EACwEC,KAAKC,MAA9EC,EADCH,EACDG,WAAYC,EADXJ,EACWI,YAAaC,EADxBL,EACwBK,UAAWC,EADnCN,EACmCM,mBAAoBC,EADvDP,EACuDO,aAC9D,OACEJ,EAAa,GAAKK,EAAAhB,EAAAC,cAACgB,EAAAjB,EAAD,CAChBkB,wBAAwB,EACxBN,YAAaA,EACbC,UAAWA,EACXM,cAAeH,EAAAhB,EAAAC,cAAA,KAAGG,UAAU,qBAAqBgB,cAAY,SAC7DC,UAAWL,EAAAhB,EAAAC,cAAA,KAAGG,UAAU,sBAAsBgB,cAAY,SAC1DE,WAAY,MACZC,cAAe,YACfC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,cAAc,YACdC,kBAAkB,YAClBC,UAAWlB,EACXmB,qBAAsB,EACtBhB,mBAAoBA,GAAsB,EAC1CC,aAAcA,EACdgB,mBAAoB,aACpBC,oBAAqB,SACrBC,gBAAiB,kBAvBeC,sECJxCzD,EAAA0D,EAAAC,EAAA,sBAAAC,IAAO,IAAMA,EAAa,CACxBC,YAAa,GACb1B,YAAa,qCCFf,IAAApC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAuBe8D,IApBM,SAAArD,GAAkD,IAA/CK,EAA+CL,EAA/CK,MAAOH,EAAwCF,EAAxCE,YAAaoD,EAA2BtD,EAA3BsD,QAASnD,EAAkBH,EAAlBG,YACnD,OACEX,EAAAsB,EAAAC,cAAA,WACEvB,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,CAAOsB,OAAQd,EAAae,OAAQd,GAClCX,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,KACGU,GAAS,kGAEZb,EAAAsB,EAAAC,cAACnB,EAAA,EAAD,KACEJ,EAAAsB,EAAAC,cAAClB,EAAA,EAAD,CAAQsB,MAAM,SAASC,QAASkC,GAAhC,oBAEU,IACV9D,EAAAsB,EAAAC,cAAClB,EAAA,EAAD,CAAQsB,MAAM,YAAYC,QAASjB,GAAnC,0DCdV,IAAAb,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAgE,EAAAhE,EAAA,KAAAiE,EAAAjE,EAAAE,EAAA8D,GAAAE,EAAAlE,EAAA,KAKMmE,EAAa,SAAAC,GACjB,GAAIC,kBAAQD,GACV,OAAOnE,EAAAsB,EAAAC,cAAA,SAAOG,UAAU,yBAAjB,4BAIL2C,EAAkB,SAAA7D,GAalB,IAZJ8D,EAYI9D,EAZJ8D,SACAC,EAWI/D,EAXJ+D,WACA1D,EAUIL,EAVJK,MACA2D,EASIhE,EATJgE,KACAC,EAQIjE,EARJiE,KACAC,EAOIlE,EAPJkE,IACAC,EAMInE,EANJmE,YACAR,EAKI3D,EALJ2D,MACAS,EAIIpE,EAJJoE,SACAC,EAGIrE,EAHJqE,SACAC,EAEItE,EAFJsE,YACAC,EACIvE,EADJuE,OAIA,OAFKD,IAAaA,EAAc,IAC5BD,GAAUC,EAAYE,QAAQd,GAEhClE,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,KACEF,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,CAAOuB,UAAU,cAAcuD,IAAKR,GAAMzE,EAAAsB,EAAAC,cAAA,cACvCV,EADuC,KAA1C,IACqBgE,GAAY7E,EAAAsB,EAAAC,cAAA,QAAMG,UAAU,eAAhB,MAEjC1B,EAAAsB,EAAAC,cAACyC,EAAA1C,EAAD,CACEgD,SAAUA,EACVY,GAAIT,EACJA,KAAMA,EACNC,IAAKA,EACLP,MAAO,GAAKA,EACZS,SAAUA,EACVJ,KAAMA,EACNG,YAAaA,EACbjD,UAAS,gBAAAyD,OAAkBZ,GAC3BO,YAAaA,EACbC,OAAQA,MAahBV,EAAgBe,aAAe,CAC7BvE,MAAO,GACP2D,KAAM,OACNC,KAAM,GACNE,YAAa,IAGAN,wCC/Df,IAAAvE,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAIMsF,EAAc,SAAA7E,GAad,IAZJK,EAYIL,EAZJK,MACA8D,EAWInE,EAXJmE,YACAF,EAUIjE,EAVJiE,KACAN,EASI3D,EATJ2D,MACAmB,EAQI9E,EARJ8E,QACAV,EAOIpE,EAPJoE,SAEAC,GAKIrE,EANJ+D,WAMI/D,EALJqE,UAIAP,GACI9D,EAJJ+E,WAII/E,EAHJgF,UAGIhF,EADJ8D,UAEA,OACEtE,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,KACEF,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,CAAOuB,UAAU,cAAcuD,IAAKR,GAAMzE,EAAAsB,EAAAC,cAAA,cACvCV,IAEHb,EAAAsB,EAAAC,cAAA,UACEqD,SAAUA,EACVlD,UAAS,eACT8C,KAAK,SACLC,KAAMA,EACNI,SAAUA,EACVV,MAAOA,GAAS,GAEhBG,SAAUA,GAETK,GAAe3E,EAAAsB,EAAAC,cAAA,cAASoD,GACxBW,EAAQG,IAAI,SAACC,EAAGC,GACf,OACE3F,EAAAsB,EAAAC,cAAA,UAAQqE,IAAKD,EAAGxB,MAAOuB,EAAER,IACtBQ,EAAEjB,WAgBjBY,EAAYD,aAAe,CACzBvE,MAAO,GACP4D,KAAM,GACNE,YAAa,IAGAU,oWCxCTQ,cACF,SAAAA,EAAY7D,GAAO,IAAA8D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhE,KAAA8D,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhE,KAAAgE,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApE,KAAMC,KAkBVoE,SAAW,SAACA,GACR,IAAIC,EAAWD,IAAaN,EAAKQ,MAAMF,UAAsC,KAAxBN,EAAKQ,MAAMF,SAChEN,EAAKS,SACD,CACIC,OAAOT,OAAAU,EAAA,EAAAV,CAAA,GACAD,EAAKQ,MAAME,OADZ,CAEFE,KAAM,IAEVN,WACAO,SAAQN,IAAWP,EAAKQ,MAAMK,QAElC,kBAAMb,EAAKc,qBA9BAd,EAkCnBe,gBAAkB,SAAAC,GACdhB,EAAKS,SACD,CACIC,OAAOT,OAAAU,EAAA,EAAAV,CAAA,GACAD,EAAKQ,MAAME,OADZ,CAEFE,KAAMI,EAAEC,SAAW,KAG3B,kBAAMjB,EAAKc,qBA1CAd,EA8CnBkB,OAAS,SAAAF,GACLhB,EAAKS,SACD,CACIC,OAAOT,OAAAU,EAAA,EAAAV,CAAA,GACAD,EAAKQ,MAAME,OADZ,CAEFE,KAAM,IAEVO,MAAOH,EAAEI,OAAO/C,OAEpB,WACI2B,EAAKc,qBAxDEd,EA6DnBqB,eAAiB,SAAAL,GACbA,EAAEM,UACFtB,EAAKuB,gBAAgBP,IA/DNhB,EAkEnBwB,eAlEmBvB,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAlG,EAAAmG,KAkEF,SAAAC,IAAA,OAAAF,EAAAlG,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEHC,IAAYT,eAAexB,EAAKQ,MAAM0B,QAFnC,OAGmD,IAAxDlC,EAAK9D,MAAMiG,aAAaA,aAAaC,QAAQC,QAC7CrC,EAAKS,SAAS,CACVC,OAAOT,OAAAU,EAAA,EAAAV,CAAA,GAAMD,EAAKQ,MAAME,OAAlB,CAA0BE,KAAMZ,EAAKQ,MAAME,OAAOE,KAAO,MAGvEZ,EAAKc,kBACLd,EAAKsC,oBAELC,YAAa,8CAXJT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAaTW,YAAUX,EAAAU,IAbD,yBAAAV,EAAAY,SAAAd,EAAA,iBAlEE5B,EAmFnBsC,kBAAoB,WAChBtC,EAAKS,SAAS,SAAAkC,GAAS,MAAK,CACxBC,mBAAoBD,EAAUC,sBArFnB5C,EAyFnB6C,kBAAoB,SAAAX,GAChBlC,EAAKS,SAAS,CAAEyB,UAAU,kBAAMlC,EAAKsC,uBA1FtBtC,EA6FnB8C,gBAAkB,SAAAC,GAEdA,EAAKC,SAAWC,IAAOF,EAAKC,UAAUE,OAAO,cAC7ClD,EAAKmD,gBAAgBJ,EAFT,oBA9FG/C,EAmGnBoD,cAAgB,SAAAC,GACZ,IAAIC,EAAYD,EAAGjC,OAAOzC,KACtB4E,EAAaF,EAAGjC,OAAO/C,MAAMmF,OAC7BT,EAAO9C,OAAOwD,OAAO,GAAIzD,EAAKQ,MAAMuC,MACxCA,EAAKO,GAAaC,EAClBvD,EAAKS,SAAS,CAAEsC,UAxGD/C,EA2GnB0D,eA3GmBzD,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAlG,EAAAmG,KA2GF,SAAAgC,IAAA,OAAAjC,EAAAlG,EAAAqG,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAEHC,IAAYyB,eAAe1D,EAAKQ,MAAMuC,MAFnC,OAGT/C,EAAKc,kBACLd,EAAKmD,kBACLZ,YAAa,uBALJqB,EAAA5B,KAAA,gBAAA4B,EAAA7B,KAAA,EAAA6B,EAAApB,GAAAoB,EAAA,kCAAAA,EAAAlB,SAAAiB,EAAA,iBA3GE3D,EAqHnB6D,YArHmB5D,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAlG,EAAAmG,KAqHL,SAAAmC,IAAA,OAAApC,EAAAlG,EAAAqG,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAEAC,IAAY4B,YAAY7D,EAAKQ,MAAMuC,MAFnC,OAGN/C,EAAKc,kBACLd,EAAKmD,kBACLZ,YAAa,8CALPwB,EAAA/B,KAAA,uBAAA+B,EAAAhC,KAAA,EAAAgC,EAAAvB,GAAAuB,EAAA,SAAAA,EAAAC,OAAA,SAOC,MAPD,yBAAAD,EAAArB,SAAAoB,EAAA,iBArHK9D,EAgInBiE,aAAe,WAAM,IACXlB,EAAS/C,EAAKQ,MAAduC,KACA3D,EAAO2D,EAAP3D,GACN,IAAK,IAAIU,KAAOiD,EACZ,GAAyB,KAArBA,EAAKjD,GAAK0D,OACV,OAAO,KAGVpE,EAGDY,EAAK0D,iBAFL1D,EAAK6D,eAzIM7D,EA+InBkE,SAAW,SAAAlD,GACPA,EAAEmD,iBACFnE,EAAKoE,KAAKC,cACVrE,EAAKiE,gBAlJUjE,EAqJnBc,gBAAkB,WACd,IAAIJ,EAAST,OAAOwD,OAAO,GAAIzD,EAAKQ,MAAME,OAAQ,CAC9CS,MAAOnB,EAAKQ,MAAMW,MAClBb,SAAUN,EAAKQ,MAAMF,SACrBO,OAAQb,EAAKQ,MAAMK,SAEvBb,EAAK9D,MAAM4E,gBAAgBJ,IA3JZV,EA8JnBsE,WAAa,WASTtE,EAAKmD,gBAPU,CACXxE,KAAM,GACNqE,SAAU,GACVuB,OAAQ,IACRC,SAAU,IACVC,MAAO,IANC,qBA/JGzE,EA0KnBmD,gBAAkB,SAACJ,EAAMhI,GACrBiF,EAAKS,SAAS,SAAAkC,GAAS,MAAK,CACxB+B,iBAAkB/B,EAAU+B,gBAC5B3B,KAAMA,GAAQ,GACd4B,UAAW5J,MA5KfiF,EAAKQ,MAAQ,CACTkE,iBAAiB,EACjB9B,mBAAmB,EACnBG,KAAM,GACNb,OAAQ,KACRxB,OAAQ,CACJE,KAAM/C,IAAWzB,YACjBwI,KAAM/G,IAAWC,aAErBwC,SAAU,GACVO,QAAQ,EACRM,MAAO,GACP0D,cAAe,IAEnB7E,EAAKuB,gBAAkBuD,IAAOC,SAAS/E,EAAKkB,OAAQ,KAhBrClB,mFAmLf/D,KAAK6E,mDAGA,IAAAkE,EAAA/I,KAAAgJ,EAE+BhJ,KAAKuE,MAAjCoC,EAFHqC,EAEGrC,kBAAmBG,EAFtBkC,EAEsBlC,KACnBZ,EAAiBlG,KAAKC,MAAMiG,aAA5BA,aACAC,EAAmCD,EAAnCC,QAAS8C,EAA0B/C,EAA1B+C,UAAW/I,EAAegG,EAAfhG,WACtBgJ,EAAY/C,GAAWA,EAAQC,OAAS,EAC9C,OACI+C,EAAA5J,EAAAC,cAAA,OAAKG,UAAU,mBACXwJ,EAAA5J,EAAAC,cAAC4J,EAAA,EAAD,CACIrH,QAAS/B,KAAKuF,eACd5G,YAAagI,EACb/H,YAAaoB,KAAKqG,oBAEtB8C,EAAA5J,EAAAC,cAAC6J,EAAA,EAAD,CACI3K,KAAK,KACLC,YAAaqB,KAAKuE,MAAMkE,gBACxB3J,MAAOkB,KAAKuE,MAAMmE,UAClBrJ,cAAY,GAEZ8J,EAAA5J,EAAAC,cAAC8J,EAAA/J,EAAD,CACI0I,SAAU,SAAAlD,GAAC,OAAIgE,EAAKd,SAASlD,IAC7BwE,IAAK,SAAAC,GAAOT,EAAKZ,KAAOqB,IACxBL,EAAA5J,EAAAC,cAACiK,EAAA,EAAD,KACIN,EAAA5J,EAAAC,cAACkK,EAAA,EAAD,CACIhH,KAAK,OACL5D,MAAM,OACN2D,KAAK,OACLI,SAAU7C,KAAKmH,cACf/E,MAAO0E,EAAKpE,KACZI,UAAU,KAGlBqG,EAAA5J,EAAAC,cAACkK,EAAA,EAAD,CACIhH,KAAK,WACL5D,MAAM,WACN6D,IAAKqE,MAASC,OAAO,cACrBxE,KAAK,OACLI,SAAU7C,KAAKmH,cACf/E,MAAO0E,EAAKC,SACZjE,UAAU,IAEdqG,EAAA5J,EAAAC,cAACmK,EAAA,EAAD,KACIR,EAAA5J,EAAAC,cAACoK,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzBb,EAAA5J,EAAAC,cAACiK,EAAA,EAAD,KACIN,EAAA5J,EAAAC,cAACyK,EAAA,EAAD,CACIvH,KAAK,WACL5D,MAAM,QACN2E,UAAU,YACVD,WAAW,aACXX,SAAU7C,KAAKmH,cACf/E,MAAO0E,EAAKyB,SACZhF,QAAS,CACL,CAAEJ,GAAI,EAAGT,KAAM,OACf,CAAES,GAAI,EAAGT,KAAM,OACf,CAAES,GAAI,EAAGT,KAAM,SACf,CAAES,GAAI,EAAGT,KAAM,QACf,CAAES,GAAI,EAAGT,KAAM,aAK/ByG,EAAA5J,EAAAC,cAACoK,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzBb,EAAA5J,EAAAC,cAACiK,EAAA,EAAD,KACIN,EAAA5J,EAAAC,cAACyK,EAAA,EAAD,CACIvH,KAAK,SACL5D,MAAM,SACN2E,UAAU,YACVD,WAAW,aACXpB,MAAO0E,EAAKwB,OACZzF,SAAU7C,KAAKmH,cACf5D,QAAS,CACL,CAAEJ,GAAI,EAAGT,KAAM,QACf,CAAES,GAAI,EAAGT,KAAM,UACf,CAAES,GAAI,EAAGT,KAAM,SAEnBI,UAAU,OAK1BqG,EAAA5J,EAAAC,cAACkK,EAAA,EAAD,CACIhH,KAAK,QACL5D,MAAM,QACN2D,KAAK,QACLI,SAAU7C,KAAKmH,cACf/E,MAAO0E,EAAK0B,MACZ1F,UAAU,IAEdqG,EAAA5J,EAAAC,cAAA,OAAKG,UAAU,eACXwJ,EAAA5J,EAAAC,cAAC0K,EAAA,EAAD,CAAQvK,UAAU,eAAe8C,KAAK,UAAtC,YACsB,IACtB0G,EAAA5J,EAAAC,cAAC0K,EAAA,EAAD,CAAQvK,UAAU,aAAaE,QAASG,KAAKkH,iBAA7C,cAMZiC,EAAA5J,EAAAC,cAAA,OAAKG,UAAU,mBACXwJ,EAAA5J,EAAAC,cAACmK,EAAA,EAAD,CAAKhK,UAAU,+BACXwJ,EAAA5J,EAAAC,cAACoK,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzBb,EAAA5J,EAAAC,cAAC0K,EAAA,EAAD,CACIrK,QAASG,KAAKqI,WACd1I,UAAU,0BAFd,aAKJwJ,EAAA5J,EAAAC,cAACoK,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACzBb,EAAA5J,EAAAC,cAAA,SACIqD,SAAU7C,KAAKoF,eACfzF,UAAU,6CACViD,YAAY,mBAKxBuG,EAAA5J,EAAAC,cAAC2K,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAAC1K,UAAU,qDACjCwJ,EAAA5J,EAAAC,cAAA,aACI2J,EAAA5J,EAAAC,cAAA,MAAIG,UAAU,gBACVwJ,EAAA5J,EAAAC,cAAA,iBACS,IACL2J,EAAA5J,EAAAC,cAAA,KAAGK,QAAS,kBAAMkJ,EAAK1E,SAAS,SAAS1E,UAAS,GAAAyD,QAAKpD,KAAKuE,MAAMK,QAAmC,SAAxB5E,KAAKuE,MAAMF,UAA+C,KAAxBrE,KAAKuE,MAAMF,SAA4C,yBAAzB,uBAA3F,KAAAjB,OAAyK,SAAxBpD,KAAKuE,MAAMF,UAA+C,KAAxBrE,KAAKuE,MAAMF,SAAmB,aAAe,gBAAhO,QAEtD8E,EAAA5J,EAAAC,cAAA,sBAAa2J,EAAA5J,EAAAC,cAAA,KAAGK,QAAS,kBAAMkJ,EAAK1E,SAAS,aAAa1E,UAAS,GAAAyD,OAAKpD,KAAKuE,MAAMK,QAAkC,aAAxB5E,KAAKuE,MAAMF,SAA0B,uBAAyB,0BAAxF,KAAAjB,OAA6I,aAAxBpD,KAAKuE,MAAMF,SAA0B,aAAe,oBAC5O8E,EAAA5J,EAAAC,cAAA,mBAAU2J,EAAA5J,EAAAC,cAAA,KAAGK,QAAS,kBAAMkJ,EAAK1E,SAAS,aAAa1E,UAAS,GAAAyD,OAAKpD,KAAKuE,MAAMK,QAAkC,aAAxB5E,KAAKuE,MAAMF,SAA0B,uBAAyB,yBAAxF,KAAAjB,OAA4I,aAAxBpD,KAAKuE,MAAMF,SAA0B,aAAe,gBAAxK,OAAhE,KACA8E,EAAA5J,EAAAC,cAAA,oBAAW2J,EAAA5J,EAAAC,cAAA,KAAGK,QAAS,kBAAMkJ,EAAK1E,SAAS,WAAW1E,UAAS,GAAAyD,OAAKpD,KAAKuE,MAAMK,QAAkC,WAAxB5E,KAAKuE,MAAMF,SAAwB,uBAAyB,yBAAtF,KAAAjB,OAA0I,WAAxBpD,KAAKuE,MAAMF,SAAwB,aAAe,gBAApK,QAC/D8E,EAAA5J,EAAAC,cAAA,kBACU,IACN2J,EAAA5J,EAAAC,cAAA,KAAGK,QAAS,kBAAMkJ,EAAK1E,SAAS,UAAU1E,UAAS,GAAAyD,OAAKpD,KAAKuE,MAAMK,QAAkC,UAAxB5E,KAAKuE,MAAMF,SAAuB,uBAAyB,yBAArF,KAAAjB,OAAyI,UAAxBpD,KAAKuE,MAAMF,SAAuB,aAAe,gBAAlK,QAEvD8E,EAAA5J,EAAAC,cAAA,MAAIG,UAAU,iBAAd,YAGRwJ,EAAA5J,EAAAC,cAAA,aACK0J,EACK/C,EAAQzC,IAAI,SAAAoD,GAAI,OACdqC,EAAA5J,EAAAC,cAAA,MAAIG,UAAU,YAAYkE,IAAKiD,EAAK3D,IAChCgG,EAAA5J,EAAAC,cAAA,UAAKsH,EAAKpE,MACVyG,EAAA5J,EAAAC,cAAA,UACKwH,IAAOF,EAAKC,UAAUE,OAAO,OAElCkC,EAAA5J,EAAAC,cAAA,UAAKsH,EAAKwD,cACVnB,EAAA5J,EAAAC,cAAA,UAAKsH,EAAKyD,YACVpB,EAAA5J,EAAAC,cAAA,UAAKsH,EAAK0B,OACVW,EAAA5J,EAAAC,cAAA,UACI2J,EAAA5J,EAAAC,cAAC0K,EAAA,EAAD,CACIvK,UAAU,+BACVE,QAAS,kBAAMkJ,EAAKlC,gBAAgBC,MACxCqC,EAAA5J,EAAAC,cAAC0K,EAAA,EAAD,CACIvK,UAAU,6BACVC,MAAM,SACNC,QAAS,kBAAMkJ,EAAKnC,kBAAkBE,EAAK3D,WAIzD,OAIb+F,GAAahJ,EAAa,GACvBiJ,EAAA5J,EAAAC,cAACgL,EAAA,EAAD,CACIrK,YAAa,EACbD,WAAYA,EACZE,UAAW6I,EAAY,EACvB5I,mBAAoB,EACpBC,aAAcN,KAAK8E,2BA1VhB2F,IAAMhJ,WA0WtBiJ,sBAPS,SAAAnG,GAEpB,MAAO,CACH2B,aAFqB3B,EAAjB2B,eAQR,CAAErB,qBAFS6F,CAGb5G","file":"static/js/20.21d9f5b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nconst ModalInfo = ({\r\n  size,\r\n  isShowModal,\r\n  toggleModal,\r\n  children,\r\n  title,\r\n  okText,\r\n  cancelText,\r\n  clickOK,\r\n  showCancel = true,\r\n  clickCancel,\r\n  extraInfoLabel,\r\n  hiddenFooter\r\n}) => {\r\n  return (\r\n    <Modal isOpen={isShowModal} toggle={toggleModal} size={size}> \r\n      <ModalHeader>{title}</ModalHeader>\r\n      <ModalBody>{children}</ModalBody>\r\n\r\n      {!hiddenFooter && (\r\n        <ModalFooter className=\"justify-content-center\">\r\n          <Button color=\"danger\" onClick={clickOK || toggleModal}>\r\n            {okText || \"Xác nhận\"}\r\n          </Button>{\" \"}\r\n          {showCancel && (\r\n            <Button color=\"secondary\" onClick={clickCancel || toggleModal}>\r\n              {cancelText || \"Hủy bỏ\"}\r\n            </Button>\r\n          )}\r\n        </ModalFooter>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalInfo;\r\n","import React, { Component } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport './Pagination.scss'\r\n\r\nexport default class Pagination extends Component {\r\n  render() {\r\n    let { totalPages, initialPage, forcePage, pageRangeDisplayed, onPageChange } = this.props;\r\n    return (\r\n      totalPages > 0 && <ReactPaginate\r\n        disableInitialCallback={true}\r\n        initialPage={initialPage}\r\n        forcePage={forcePage}\r\n        previousLabel={<i className=\"fa fa-chevron-left\" aria-hidden=\"true\"></i>}\r\n        nextLabel={<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>}\r\n        breakLabel={'...'}\r\n        pageClassName={'page-item'}\r\n        pageLinkClassName=\"page-link\"\r\n        previousClassName='page-item'\r\n        previousLinkClassName='page-link'\r\n        nextClassName='page-item'\r\n        nextLinkClassName='page-link'\r\n        pageCount={totalPages}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={pageRangeDisplayed || 1}\r\n        onPageChange={onPageChange}\r\n        containerClassName={'pagination'}\r\n        activeLinkClassName={'active'}\r\n        activeClassName={'active'}\r\n      />\r\n    )\r\n  }\r\n}\r\n","export const pagination = {\r\n  defaultTake: 10,\r\n  initialPage: 1\r\n};\r\n\r\nexport const permissions = [\r\n  { key: \"sales\", name: \"Bán hàng\" },\r\n  { key: \"bill-management\", name: \"Quản lý hoá đơn\" },\r\n  { key: \"product-management\", name: \"Quản lý sản phẩm\" },\r\n  { key: \"promotion-management\", name: \"Quản lý khuyến mãi\" },\r\n  { key: \"user-management\", name: \"Quản lý người dùng\" },\r\n  { key: \"branch-management\", name: \"Quản lý chi nhánh\" },\r\n  { key: \"employee-management\", name: \"Quản lý nhân viên\" },\r\n  { key: \"category-management\", name: \"Quản lý danh mục\" },\r\n  { key: \"group-management\", name: \"Quản lý nhóm\" },\r\n  { key: \"notification-management\", name: \"Quản lý thông báo\" }\r\n];\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nconst ModalConfirm = ({ title, isShowModal, clickOk, toggleModal }) => {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={isShowModal} toggle={toggleModal}>\r\n        <ModalBody>\r\n          {title || \"Bạn có chắc chắn muốn xoá trường dữ liệu này?\"}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={clickOk}>\r\n            Xác nhận\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggleModal}>\r\n            Huỷ bỏ\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { isEmpty } from \"validator\";\r\nconst isRequired = value => {\r\n  if (isEmpty(value)) {\r\n    return <small className=\"form-text text-danger\">This field is required!</small>;\r\n  }\r\n};\r\n\r\nconst ValidationInput = ({\r\n  disabled,\r\n  inputClass,\r\n  title,\r\n  type,\r\n  name,\r\n  max,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  required,\r\n  validations,\r\n  accept\r\n}) => {\r\n  if (!validations) validations = [];\r\n  if (required) validations.unshift(isRequired);\r\n  return (\r\n    <FormGroup>\r\n      <Label className=\"label-input\" for={name}><strong>\r\n        {title} </strong> {required && <span className=\"text-danger\">*</span>}\r\n      </Label>\r\n      <Input\r\n        disabled={disabled}\r\n        id={name}\r\n        name={name}\r\n        max={max}\r\n        value={\"\" + value}\r\n        onChange={onChange}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className={`form-control ${inputClass}`}\r\n        validations={validations}\r\n        accept={accept}\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nValidationInput.propTypes = {\r\n  title: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nValidationInput.defaultProps = {\r\n  title: \"\",\r\n  type: \"text\",\r\n  name: \"\",\r\n  placeholder: \"\"\r\n};\r\n\r\nexport default ValidationInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\n\r\nconst SelectInput = ({\r\n  title,\r\n  placeholder,\r\n  name,\r\n  value,\r\n  options,\r\n  onChange,\r\n  inputClass,\r\n  required,\r\n  valueField,\r\n  nameField,\r\n  // defaultValue,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label className=\"label-input\" for={name}><strong>\r\n        {title}</strong>\r\n      </Label>\r\n      <select\r\n        onChange={onChange}\r\n        className={`form-control`}\r\n        type=\"select\"\r\n        name={name}\r\n        required={required}\r\n        value={value || \"\"}\r\n        // defaultValue={defaultValue || \"\"}\r\n        disabled={disabled}\r\n      >\r\n        {placeholder && <option>{placeholder}</option>}\r\n        {options.map((o, i) => {\r\n          return (\r\n            <option key={i} value={o.id}>\r\n              {o.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n  title: PropTypes.string,\r\n  options: PropTypes.array.isRequired,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string\r\n};\r\n\r\nSelectInput.defaultProps = {\r\n  title: \"\",\r\n  name: \"\",\r\n  placeholder: \"\"\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Form from \"react-validation/build/form\";\r\nimport lodash from \"lodash\";\r\n\r\nimport { getEmployeeList } from \"../../../actions/employee.list.action\";\r\nimport ModalInfo from \"../../../components/modal/modal.info\";\r\nimport ModalConfirm from \"../../../components/modal/modal.confirm\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport employeeApi from \"../../../api/api.employee\";\r\n\r\nimport { Row, Col, Table, Button, FormGroup, } from \"reactstrap\";\r\nimport { pagination } from \"../../../constant/app.constant\";\r\nimport ValidationInput from \"../../../components/common/validation.input\";\r\nimport SelectInput from \"../../../components/common/select.input\";\r\nimport { toastSuccess, toastError } from \"../../../helpers/toast.helper\";\r\nimport Pagination from \"../../../components/pagination/Pagination\";\r\nimport moment from \"moment\"\r\n\r\nclass EmployeeListPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowInfoModal: false,\r\n            isShowDeleteModal: false,\r\n            item: {},\r\n            itemId: null,\r\n            params: {\r\n                skip: pagination.initialPage,\r\n                take: pagination.defaultTake\r\n            },\r\n            sortName: \"\",\r\n            isDesc: false,\r\n            query: \"\",\r\n            valueSelected: []\r\n        };\r\n        this.delayedCallback = lodash.debounce(this.search, 1000);\r\n    }\r\n\r\n    sortName = (sortName) => {\r\n        let isCheck = (sortName === this.state.sortName) || (this.state.sortName === \"\");\r\n        this.setState(\r\n            {\r\n                params: {\r\n                    ...this.state.params,\r\n                    skip: 1\r\n                },\r\n                sortName,\r\n                isDesc: isCheck ? !this.state.isDesc : false\r\n            },\r\n            () => this.getEmployeeList()\r\n        );\r\n    };\r\n\r\n    handlePageClick = e => {\r\n        this.setState(\r\n            {\r\n                params: {\r\n                    ...this.state.params,\r\n                    skip: e.selected + 1\r\n                }\r\n            },\r\n            () => this.getEmployeeList()\r\n        );\r\n    };\r\n\r\n    search = e => {\r\n        this.setState(\r\n            {\r\n                params: {\r\n                    ...this.state.params,\r\n                    skip: 1\r\n                },\r\n                query: e.target.value\r\n            },\r\n            () => {\r\n                this.getEmployeeList();\r\n            }\r\n        );\r\n    };\r\n\r\n    onSearchChange = e => {\r\n        e.persist();\r\n        this.delayedCallback(e);\r\n    };\r\n\r\n    deleteEmployee = async () => {\r\n        try {\r\n            await employeeApi.deleteEmployee(this.state.itemId);\r\n            if (this.props.employeeList.employeeList.sources.length === 1) {\r\n                this.setState({\r\n                    params: { ...this.state.params, skip: this.state.params.skip - 1 }\r\n                })\r\n            }\r\n            this.getEmployeeList();\r\n            this.toggleDeleteModal();\r\n\r\n            toastSuccess(\"The employee has been deleted successfully\");\r\n        } catch (err) {\r\n            toastError(err);\r\n        }\r\n    };\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState(prevState => ({\r\n            isShowDeleteModal: !prevState.isShowDeleteModal\r\n        }));\r\n    };\r\n\r\n    showConfirmDelete = itemId => {\r\n        this.setState({ itemId }, () => this.toggleDeleteModal());\r\n    };\r\n\r\n    showUpdateModal = item => {\r\n        let title = \"Update Employee\";\r\n        item.birthday = moment(item.birthday).format(\"YYYY-MM-DD\");\r\n        this.toggleModalInfo(item, title);\r\n    };\r\n\r\n    onModelChange = el => {\r\n        let inputName = el.target.name;\r\n        let inputValue = el.target.value.trim();\r\n        let item = Object.assign({}, this.state.item);\r\n        item[inputName] = inputValue;\r\n        this.setState({ item });\r\n    };\r\n\r\n    updateEmployee = async () => {\r\n        try {\r\n            await employeeApi.updateEmployee(this.state.item);\r\n            this.getEmployeeList();\r\n            this.toggleModalInfo();\r\n            toastSuccess(\"Update successfully\");\r\n        } catch (err) {\r\n        }\r\n    };\r\n\r\n    addEmployee = async () => {\r\n        try {\r\n            await employeeApi.addEmployee(this.state.item);\r\n            this.getEmployeeList();\r\n            this.toggleModalInfo();\r\n            toastSuccess(\"The employee has been created successfully\");\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    saveEmployee = () => {\r\n        let { item } = this.state;\r\n        let { id } = item;\r\n        for (let key in item) {\r\n            if (item[key].trim() === \"\") {\r\n                return null;\r\n            }\r\n        }\r\n        if (!id) {\r\n            this.addEmployee();\r\n        } else {\r\n            this.updateEmployee();\r\n        }\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n        this.saveEmployee();\r\n    };\r\n\r\n    getEmployeeList = () => {\r\n        let params = Object.assign({}, this.state.params, {\r\n            query: this.state.query,\r\n            sortName: this.state.sortName,\r\n            isDesc: this.state.isDesc\r\n        });\r\n        this.props.getEmployeeList(params);\r\n    };\r\n\r\n    showAddNew = () => {\r\n        let title = \"Add new employee\";\r\n        let employee = {\r\n            name: \"\",\r\n            birthday: \"\",\r\n            gender: \"1\",\r\n            levelEmp: \"1\",\r\n            email: \"\"\r\n        };\r\n        this.toggleModalInfo(employee, title);\r\n    };\r\n\r\n    toggleModalInfo = (item, title) => {\r\n        this.setState(prevState => ({\r\n            isShowInfoModal: !prevState.isShowInfoModal,\r\n            item: item || {},\r\n            formTitle: title\r\n        }));\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { isShowDeleteModal, item } = this.state;\r\n        const { employeeList } = this.props.employeeList;\r\n        const { sources, pageIndex, totalPages } = employeeList;\r\n        const hasResult = sources && sources.length > 0;\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <ModalConfirm\r\n                    clickOk={this.deleteEmployee}\r\n                    isShowModal={isShowDeleteModal}\r\n                    toggleModal={this.toggleDeleteModal}\r\n                />\r\n                <ModalInfo\r\n                    size=\"lg\"\r\n                    isShowModal={this.state.isShowInfoModal}\r\n                    title={this.state.formTitle}\r\n                    hiddenFooter\r\n                >\r\n                    <Form\r\n                        onSubmit={e => this.onSubmit(e)}\r\n                        ref={c => { this.form = c; }}>\r\n                        <FormGroup>\r\n                            <ValidationInput\r\n                                name=\"name\"\r\n                                title=\"Name\"\r\n                                type=\"text\"\r\n                                onChange={this.onModelChange}\r\n                                value={item.name}\r\n                                required={true} />\r\n                        </FormGroup>\r\n\r\n                        <ValidationInput\r\n                            name=\"birthday\"\r\n                            title=\"Birthday\"\r\n                            max={moment().format(\"YYYY-MM-DD\")}\r\n                            type=\"date\"\r\n                            onChange={this.onModelChange}\r\n                            value={item.birthday}\r\n                            required={true} />\r\n\r\n                        <Row>\r\n                            <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\">\r\n                                <FormGroup>\r\n                                    <SelectInput\r\n                                        name=\"levelEmp\"\r\n                                        title=\"Level\"\r\n                                        nameField=\"nameField\"\r\n                                        valueField=\"valueField\"\r\n                                        onChange={this.onModelChange}\r\n                                        value={item.levelEmp}\r\n                                        options={[\r\n                                            { id: 1, name: \"One\" },\r\n                                            { id: 2, name: \"Two\" },\r\n                                            { id: 3, name: \"Three\" },\r\n                                            { id: 4, name: \"Four\" },\r\n                                            { id: 5, name: \"Five\" }\r\n                                        ]} />\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\">\r\n                                <FormGroup>\r\n                                    <SelectInput\r\n                                        name=\"gender\"\r\n                                        title=\"Gender\"\r\n                                        nameField=\"nameField\"\r\n                                        valueField=\"valueField\"\r\n                                        value={item.gender}\r\n                                        onChange={this.onModelChange}\r\n                                        options={[\r\n                                            { id: 1, name: \"Male\" },\r\n                                            { id: 2, name: \"Female\" },\r\n                                            { id: 3, name: \"None\" }\r\n                                        ]}\r\n                                        required={true} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <ValidationInput\r\n                            name=\"email\"\r\n                            title=\"Email\"\r\n                            type=\"email\"\r\n                            onChange={this.onModelChange}\r\n                            value={item.email}\r\n                            required={true}/>\r\n                            \r\n                        <div className=\"text-center\">\r\n                            <Button className=\" btn-primary\" type=\"submit\">\r\n                                Confirm </Button>{\" \"}\r\n                            <Button className=\"btn-danger\" onClick={this.toggleModalInfo}>\r\n                                Cancel </Button>\r\n                        </div>\r\n                    </Form>\r\n                </ModalInfo>\r\n\r\n                <div className=\"animated fadeIn\">\r\n                    <Row className=\"flex-container header-table\" >\r\n                        <Col xs=\"5\" sm=\"5\" md=\"5\" lg=\"5\">\r\n                            <Button\r\n                                onClick={this.showAddNew}\r\n                                className=\"btn btn-success btn-sm\" > Create </Button>\r\n                        </Col>\r\n\r\n                        <Col xs=\"5\" sm=\"5\" md=\"5\" lg=\"5\"  >\r\n                            <input\r\n                                onChange={this.onSearchChange}\r\n                                className=\"form-control form-control-sm custom_search\"\r\n                                placeholder=\"Searching...\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Table responsive bordered className=\"react-bs-table react-bs-table-bordered data-table\">\r\n                        <thead>\r\n                            <tr className=\"table-header\">\r\n                                <th>\r\n                                    Name{\" \"}\r\n                                    <i onClick={() => this.sortName(\"Name\")} className={`${this.state.isDesc && (this.state.sortName === \"Name\" || this.state.sortName === \"\") ? \"fa fa-caret-up fa-lg\" : \"fa fa-caret-down fa-lg\"} ${(this.state.sortName === \"Name\" || this.state.sortName === \"\") ? \"activeSort\" : \"disactiveSort\"} `} ></i>\r\n                                </th>\r\n                                <th>Birthday <i onClick={() => this.sortName(\"Birthday\")} className={`${this.state.isDesc && this.state.sortName === \"Birthday\" ? \"fa fa-caret-up fa-lg\" : \"fa fa-caret-down fa-lg \"} ${this.state.sortName === \"Birthday\" ? \"activeSort\" : \"disactiveSort\"}`} ></i></th>\r\n                                <th>Level <i onClick={() => this.sortName(\"levelEmp\")} className={`${this.state.isDesc && this.state.sortName === \"levelEmp\" ? \"fa fa-caret-up fa-lg\" : \"fa fa-caret-down fa-lg\"} ${this.state.sortName === \"levelEmp\" ? \"activeSort\" : \"disactiveSort\"} `} ></i> </th>\r\n                                <th>Gender <i onClick={() => this.sortName(\"Gender\")} className={`${this.state.isDesc && this.state.sortName === \"Gender\" ? \"fa fa-caret-up fa-lg\" : \"fa fa-caret-down fa-lg\"} ${this.state.sortName === \"Gender\" ? \"activeSort\" : \"disactiveSort\"} `} ></i></th>\r\n                                <th>\r\n                                    Email{\" \"}\r\n                                    <i onClick={() => this.sortName(\"Email\")} className={`${this.state.isDesc && this.state.sortName === \"Email\" ? \"fa fa-caret-up fa-lg\" : \"fa fa-caret-down fa-lg\"} ${this.state.sortName === \"Email\" ? \"activeSort\" : \"disactiveSort\"} `}></i>\r\n                                </th>\r\n                                <th className=\"custom_action\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {hasResult\r\n                                ? sources.map(item => (\r\n                                    <tr className=\"table-row\" key={item.id}>\r\n                                        <td>{item.name}</td>\r\n                                        <td>\r\n                                            {moment(item.birthday).format(\"LL\")}\r\n                                        </td>\r\n                                        <td>{item.levelEmpText}</td>\r\n                                        <td>{item.genderText}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>\r\n                                            <Button\r\n                                                className=\"btn btn-primary fa fa-pencil\"\r\n                                                onClick={() => this.showUpdateModal(item)} />\r\n                                            <Button\r\n                                                className=\"btn btn-danger fa fa-trash\"\r\n                                                color=\"danger\"\r\n                                                onClick={() => this.showConfirmDelete(item.id)} />\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                                : null}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    {hasResult && totalPages > 1 && (\r\n                        <Pagination\r\n                            initialPage={0}\r\n                            totalPages={totalPages}\r\n                            forcePage={pageIndex - 1}\r\n                            pageRangeDisplayed={2}\r\n                            onPageChange={this.handlePageClick}\r\n                        />\r\n                    )}\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { employeeList } = state;\r\n    return {\r\n        employeeList\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getEmployeeList }\r\n)(EmployeeListPage);\r\n"],"sourceRoot":""}